{
    "abi": [
        {
            "type": "constructor",
            "inputs": [
                {
                    "name": "_factory",
                    "type": "address",
                    "internalType": "address"
                },
                {
                    "name": "_WETH9",
                    "type": "address",
                    "internalType": "address"
                }
            ],
            "stateMutability": "nonpayable"
        },
        {
            "type": "function",
            "name": "WETH9",
            "inputs": [],
            "outputs": [
                {
                    "name": "",
                    "type": "address",
                    "internalType": "address"
                }
            ],
            "stateMutability": "view"
        },
        {
            "type": "function",
            "name": "factory",
            "inputs": [],
            "outputs": [
                {
                    "name": "",
                    "type": "address",
                    "internalType": "address"
                }
            ],
            "stateMutability": "view"
        },
        {
            "type": "function",
            "name": "quoteExactInput",
            "inputs": [
                {
                    "name": "path",
                    "type": "bytes",
                    "internalType": "bytes"
                },
                {
                    "name": "amountIn",
                    "type": "uint256",
                    "internalType": "uint256"
                }
            ],
            "outputs": [
                {
                    "name": "amountOut",
                    "type": "uint256",
                    "internalType": "uint256"
                },
                {
                    "name": "sqrtPriceX96AfterList",
                    "type": "uint160[]",
                    "internalType": "uint160[]"
                },
                {
                    "name": "initializedTicksCrossedList",
                    "type": "uint32[]",
                    "internalType": "uint32[]"
                },
                {
                    "name": "gasEstimate",
                    "type": "uint256",
                    "internalType": "uint256"
                }
            ],
            "stateMutability": "nonpayable"
        },
        {
            "type": "function",
            "name": "quoteExactInputSingle",
            "inputs": [
                {
                    "name": "params",
                    "type": "tuple",
                    "internalType": "struct IQuoterV2.QuoteExactInputSingleParams",
                    "components": [
                        {
                            "name": "tokenIn",
                            "type": "address",
                            "internalType": "address"
                        },
                        {
                            "name": "tokenOut",
                            "type": "address",
                            "internalType": "address"
                        },
                        {
                            "name": "amountIn",
                            "type": "uint256",
                            "internalType": "uint256"
                        },
                        {
                            "name": "fee",
                            "type": "uint24",
                            "internalType": "uint24"
                        },
                        {
                            "name": "sqrtPriceLimitX96",
                            "type": "uint160",
                            "internalType": "uint160"
                        }
                    ]
                }
            ],
            "outputs": [
                {
                    "name": "amountOut",
                    "type": "uint256",
                    "internalType": "uint256"
                },
                {
                    "name": "sqrtPriceX96After",
                    "type": "uint160",
                    "internalType": "uint160"
                },
                {
                    "name": "initializedTicksCrossed",
                    "type": "uint32",
                    "internalType": "uint32"
                },
                {
                    "name": "gasEstimate",
                    "type": "uint256",
                    "internalType": "uint256"
                }
            ],
            "stateMutability": "nonpayable"
        },
        {
            "type": "function",
            "name": "quoteExactOutput",
            "inputs": [
                {
                    "name": "path",
                    "type": "bytes",
                    "internalType": "bytes"
                },
                {
                    "name": "amountOut",
                    "type": "uint256",
                    "internalType": "uint256"
                }
            ],
            "outputs": [
                {
                    "name": "amountIn",
                    "type": "uint256",
                    "internalType": "uint256"
                },
                {
                    "name": "sqrtPriceX96AfterList",
                    "type": "uint160[]",
                    "internalType": "uint160[]"
                },
                {
                    "name": "initializedTicksCrossedList",
                    "type": "uint32[]",
                    "internalType": "uint32[]"
                },
                {
                    "name": "gasEstimate",
                    "type": "uint256",
                    "internalType": "uint256"
                }
            ],
            "stateMutability": "nonpayable"
        },
        {
            "type": "function",
            "name": "quoteExactOutputSingle",
            "inputs": [
                {
                    "name": "params",
                    "type": "tuple",
                    "internalType": "struct IQuoterV2.QuoteExactOutputSingleParams",
                    "components": [
                        {
                            "name": "tokenIn",
                            "type": "address",
                            "internalType": "address"
                        },
                        {
                            "name": "tokenOut",
                            "type": "address",
                            "internalType": "address"
                        },
                        {
                            "name": "amount",
                            "type": "uint256",
                            "internalType": "uint256"
                        },
                        {
                            "name": "fee",
                            "type": "uint24",
                            "internalType": "uint24"
                        },
                        {
                            "name": "sqrtPriceLimitX96",
                            "type": "uint160",
                            "internalType": "uint160"
                        }
                    ]
                }
            ],
            "outputs": [
                {
                    "name": "amountIn",
                    "type": "uint256",
                    "internalType": "uint256"
                },
                {
                    "name": "sqrtPriceX96After",
                    "type": "uint160",
                    "internalType": "uint160"
                },
                {
                    "name": "initializedTicksCrossed",
                    "type": "uint32",
                    "internalType": "uint32"
                },
                {
                    "name": "gasEstimate",
                    "type": "uint256",
                    "internalType": "uint256"
                }
            ],
            "stateMutability": "nonpayable"
        },
        {
            "type": "function",
            "name": "uniswapV3SwapCallback",
            "inputs": [
                {
                    "name": "amount0Delta",
                    "type": "int256",
                    "internalType": "int256"
                },
                {
                    "name": "amount1Delta",
                    "type": "int256",
                    "internalType": "int256"
                },
                {
                    "name": "path",
                    "type": "bytes",
                    "internalType": "bytes"
                }
            ],
            "outputs": [],
            "stateMutability": "view"
        }
    ],
    "bytecode": {
        "object": "0x60c06040523480156200001157600080fd5b5060405162002ad238038062002ad28339818101604052810190620000379190620000c8565b81818173ffffffffffffffffffffffffffffffffffffffff1660808173ffffffffffffffffffffffffffffffffffffffff1660601b815250508073ffffffffffffffffffffffffffffffffffffffff1660a08173ffffffffffffffffffffffffffffffffffffffff1660601b815250505050505062000157565b600081519050620000c2816200013d565b92915050565b60008060408385031215620000dc57600080fd5b6000620000ec85828601620000b1565b9250506020620000ff85828601620000b1565b9150509250929050565b600062000116826200011d565b9050919050565b600073ffffffffffffffffffffffffffffffffffffffff82169050919050565b620001488162000109565b81146200015457600080fd5b50565b60805160601c60a05160601c6129476200018b600039806103b75250806106185280610a5d5280610ca152506129476000f3fe608060405234801561001057600080fd5b506004361061007d5760003560e01c8063c45a01551161005b578063c45a015514610106578063c6a5026a14610124578063cdca175314610157578063fa461e331461018a5761007d565b80632f80bb1d146100825780634aa4a4fc146100b5578063bd21704a146100d3575b600080fd5b61009c60048036038101906100979190611f82565b6101a6565b6040516100ac9493929190612531565b60405180910390f35b6100bd6103b5565b6040516100ca919061247a565b60405180910390f35b6100ed60048036038101906100e891906120e3565b6103d9565b6040516100fd9493929190612584565b60405180910390f35b61010e610616565b60405161011b919061247a565b60405180910390f35b61013e600480360381019061013991906120ba565b61063a565b60405161014e9493929190612584565b60405180910390f35b610171600480360381019061016c9190611f82565b61081d565b6040516101819493929190612531565b60405180910390f35b6101a4600480360381019061019f9190612012565b610a2c565b005b600060608060006101b686610bea565b67ffffffffffffffff811180156101cc57600080fd5b506040519080825280602002602001820160405280156101fb5781602001602082028036833780820191505090505b50925061020786610bea565b67ffffffffffffffff8111801561021d57600080fd5b5060405190808252806020026020018201604052801561024c5781602001602082028036833780820191505090505b50915060005b6001156103aa5760008060006102678a610c05565b9250925092506000806000806102ea6040518060a001604052808873ffffffffffffffffffffffffffffffffffffffff1681526020018973ffffffffffffffffffffffffffffffffffffffff1681526020018f81526020018762ffffff168152602001600073ffffffffffffffffffffffffffffffffffffffff168152506103d9565b9350935093509350828b89815181106102ff57fe5b602002602001019073ffffffffffffffffffffffffffffffffffffffff16908173ffffffffffffffffffffffffffffffffffffffff1681525050818a898151811061034657fe5b602002602001019063ffffffff16908163ffffffff1681525050839c50808901985087806001019850506103798e610c56565b1561038e576103878e610c71565b9d5061039e565b8c9b5050505050505050506103ac565b50505050505050610252565b505b92959194509250565b7f000000000000000000000000000000000000000000000000000000000000000081565b6000806000806000856020015173ffffffffffffffffffffffffffffffffffffffff16866000015173ffffffffffffffffffffffffffffffffffffffff161090506000610433876000015188602001518960600151610c9a565b90506000876080015173ffffffffffffffffffffffffffffffffffffffff1614156104645786604001516000819055505b60005a90508173ffffffffffffffffffffffffffffffffffffffff1663128acb0830856104948c60400151610cd9565b60000360008d6080015173ffffffffffffffffffffffffffffffffffffffff16146104c3578c608001516104f0565b876104e557600173fffd8963efd1fc6a506488495d951d5263988d26036104ef565b60016401000276a3015b5b8d602001518e606001518f600001516040516020016105119392919061243d565b6040516020818303038152906040526040518663ffffffff1660e01b8152600401610540959493929190612495565b6040805180830381600087803b15801561055957600080fd5b505af192505050801561058a57506040513d601f19601f820116820180604052508101906105879190611fd6565b60015b610609573d80600081146105ba576040519150601f19603f3d011682016040523d82523d6000602084013e6105bf565b606091505b505a820394506000896080015173ffffffffffffffffffffffffffffffffffffffff1614156105ed57600080555b6105f8818487610d0f565b97509750975097505050505061060f565b50505050505b9193509193565b7f000000000000000000000000000000000000000000000000000000000000000081565b6000806000806000856020015173ffffffffffffffffffffffffffffffffffffffff16866000015173ffffffffffffffffffffffffffffffffffffffff161090506000610694876000015188602001518960600151610c9a565b905060005a90508173ffffffffffffffffffffffffffffffffffffffff1663128acb0830856106c68c60400151610cd9565b60008d6080015173ffffffffffffffffffffffffffffffffffffffff16146106f2578c6080015161071f565b8761071457600173fffd8963efd1fc6a506488495d951d5263988d260361071e565b60016401000276a3015b5b8d600001518e606001518f602001516040516020016107409392919061243d565b6040516020818303038152906040526040518663ffffffff1660e01b815260040161076f959493929190612495565b6040805180830381600087803b15801561078857600080fd5b505af19250505080156107b957506040513d601f19601f820116820180604052508101906107b69190611fd6565b60015b610810573d80600081146107e9576040519150601f19603f3d011682016040523d82523d6000602084013e6107ee565b606091505b505a820394506107ff818487610d0f565b975097509750975050505050610816565b50505050505b9193509193565b6000606080600061082d86610bea565b67ffffffffffffffff8111801561084357600080fd5b506040519080825280602002602001820160405280156108725781602001602082028036833780820191505090505b50925061087e86610bea565b67ffffffffffffffff8111801561089457600080fd5b506040519080825280602002602001820160405280156108c35781602001602082028036833780820191505090505b50915060005b600115610a215760008060006108de8a610c05565b9250925092506000806000806109616040518060a001604052808973ffffffffffffffffffffffffffffffffffffffff1681526020018873ffffffffffffffffffffffffffffffffffffffff1681526020018f81526020018762ffffff168152602001600073ffffffffffffffffffffffffffffffffffffffff1681525061063a565b9350935093509350828b898151811061097657fe5b602002602001019073ffffffffffffffffffffffffffffffffffffffff16908173ffffffffffffffffffffffffffffffffffffffff1681525050818a89815181106109bd57fe5b602002602001019063ffffffff16908163ffffffff1681525050839c50808901985087806001019850506109f08e610c56565b15610a05576109fe8e610c71565b9d50610a15565b8c9b505050505050505050610a23565b505050505050506108c9565b505b92959194509250565b6000831380610a3b5750600082135b610a4457600080fd5b6000806000610a5284610c05565b925092509250610a847f0000000000000000000000000000000000000000000000000000000000000000848484610e09565b506000806000808913610aca578573ffffffffffffffffffffffffffffffffffffffff168573ffffffffffffffffffffffffffffffffffffffff1610888a600003610aff565b8473ffffffffffffffffffffffffffffffffffffffff168673ffffffffffffffffffffffffffffffffffffffff161089896000035b9250925092506000610b12878787610c9a565b90506000808273ffffffffffffffffffffffffffffffffffffffff16633850c7bd6040518163ffffffff1660e01b815260040160e06040518083038186803b158015610b5d57600080fd5b505afa158015610b71573d6000803e3d6000fd5b505050506040513d601f19601f82011682018060405250810190610b95919061210c565b5050505050915091508515610bbb57604051848152826020820152816040820152606081fd5b6000805414610bd3576000548414610bd257600080fd5b5b604051858152826020820152816040820152606081fd5b60006003601401601483510381610bfd57fe5b049050919050565b6000806000610c1e600085610e2990919063ffffffff16565b9250610c34601485610f4290919063ffffffff16565b9050610c4d600360140185610e2990919063ffffffff16565b91509193909250565b60006003601401601460036014010101825110159050919050565b6060610c93600360140160036014018451038461104c9092919063ffffffff16565b9050919050565b6000610cd07f0000000000000000000000000000000000000000000000000000000000000000610ccb868686611236565b6112d2565b90509392505050565b60007f80000000000000000000000000000000000000000000000000000000000000008210610d0757600080fd5b819050919050565b6000806000806000808773ffffffffffffffffffffffffffffffffffffffff16633850c7bd6040518163ffffffff1660e01b815260040160e06040518083038186803b158015610d5e57600080fd5b505afa158015610d72573d6000803e3d6000fd5b505050506040513d601f19601f82011682018060405250810190610d96919061210c565b9091929394955090919293509091925090915090505080925050610db98961142d565b809350819750829850505050610df082828a73ffffffffffffffffffffffffffffffffffffffff166114f79092919063ffffffff16565b9350858585899550955095509550505093509350935093565b6000610e1f85610e1a868686611236565b611bda565b9050949350505050565b600081601483011015610ea4576040517f08c379a00000000000000000000000000000000000000000000000000000000081526004018080602001828103825260128152602001807f746f416464726573735f6f766572666c6f77000000000000000000000000000081525060200191505060405180910390fd5b6014820183511015610f1e576040517f08c379a00000000000000000000000000000000000000000000000000000000081526004018080602001828103825260158152602001807f746f416464726573735f6f75744f66426f756e6473000000000000000000000081525060200191505060405180910390fd5b60006c01000000000000000000000000836020860101510490508091505092915050565b600081600383011015610fbd576040517f08c379a00000000000000000000000000000000000000000000000000000000081526004018080602001828103825260118152602001807f746f55696e7432345f6f766572666c6f7700000000000000000000000000000081525060200191505060405180910390fd5b6003820183511015611037576040517f08c379a00000000000000000000000000000000000000000000000000000000081526004018080602001828103825260148152602001807f746f55696e7432345f6f75744f66426f756e647300000000000000000000000081525060200191505060405180910390fd5b60008260038501015190508091505092915050565b606081601f830110156110c7576040517f08c379a000000000000000000000000000000000000000000000000000000000815260040180806020018281038252600e8152602001807f736c6963655f6f766572666c6f7700000000000000000000000000000000000081525060200191505060405180910390fd5b82828401101561113f576040517f08c379a000000000000000000000000000000000000000000000000000000000815260040180806020018281038252600e8152602001807f736c6963655f6f766572666c6f7700000000000000000000000000000000000081525060200191505060405180910390fd5b818301845110156111b8576040517f08c379a00000000000000000000000000000000000000000000000000000000081526004018080602001828103825260118152602001807f736c6963655f6f75744f66426f756e647300000000000000000000000000000081525060200191505060405180910390fd5b60608215600081146111d9576040519150600082526020820160405261122a565b6040519150601f8416801560200281840101858101878315602002848b0101015b8183101561121757805183526020830192506020810190506111fa565b50868552601f19601f8301166040525050505b50809150509392505050565b61123e611c54565b8273ffffffffffffffffffffffffffffffffffffffff168473ffffffffffffffffffffffffffffffffffffffff16111561127d57828480945081955050505b60405180606001604052808573ffffffffffffffffffffffffffffffffffffffff1681526020018473ffffffffffffffffffffffffffffffffffffffff1681526020018362ffffff1681525090509392505050565b6000816020015173ffffffffffffffffffffffffffffffffffffffff16826000015173ffffffffffffffffffffffffffffffffffffffff161061131457600080fd5b82826000015183602001518460400151604051602001808473ffffffffffffffffffffffffffffffffffffffff1681526020018373ffffffffffffffffffffffffffffffffffffffff1681526020018262ffffff1681526020019350505050604051602081830303815290604052805190602001207fe34f199b19b2b4f47f68442619d555527d244f78a3297ea89325f843f87b8b5460001b60405160200180807fff000000000000000000000000000000000000000000000000000000000000008152506001018473ffffffffffffffffffffffffffffffffffffffff1660601b815260140183815260200182815260200193505050506040516020818303038152906040528051906020012060001c905092915050565b600080600060608451146114d657604484511015611480576040517f08c379a000000000000000000000000000000000000000000000000000000000815260040161147790612511565b60405180910390fd5b6004840193508380602001905181019061149a9190612079565b6040517f08c379a00000000000000000000000000000000000000000000000000000000081526004016114cd91906124ef565b60405180910390fd5b838060200190518101906114ea91906121aa565b9250925092509193909250565b60008060008060008060008060088b73ffffffffffffffffffffffffffffffffffffffff1663d0c93a7c6040518163ffffffff1660e01b815260040160206040518083038186803b15801561154b57600080fd5b505afa15801561155f573d6000803e3d6000fd5b505050506040513d602081101561157557600080fd5b810190808051906020019092919050505060020b8b60020b8161159457fe5b0560020b901d905060006101008c73ffffffffffffffffffffffffffffffffffffffff1663d0c93a7c6040518163ffffffff1660e01b815260040160206040518083038186803b1580156115e757600080fd5b505afa1580156115fb573d6000803e3d6000fd5b505050506040513d602081101561161157600080fd5b810190808051906020019092919050505060020b8c60020b8161163057fe5b0560020b8161163b57fe5b079050600060088d73ffffffffffffffffffffffffffffffffffffffff1663d0c93a7c6040518163ffffffff1660e01b815260040160206040518083038186803b15801561168857600080fd5b505afa15801561169c573d6000803e3d6000fd5b505050506040513d60208110156116b257600080fd5b810190808051906020019092919050505060020b8c60020b816116d157fe5b0560020b901d905060006101008e73ffffffffffffffffffffffffffffffffffffffff1663d0c93a7c6040518163ffffffff1660e01b815260040160206040518083038186803b15801561172457600080fd5b505afa158015611738573d6000803e3d6000fd5b505050506040513d602081101561174e57600080fd5b810190808051906020019092919050505060020b8d60020b8161176d57fe5b0560020b8161177857fe5b07905060008160ff166001901b8f73ffffffffffffffffffffffffffffffffffffffff16635339c296856040518263ffffffff1660e01b8152600401808260010b815260200191505060206040518083038186803b1580156117d957600080fd5b505afa1580156117ed573d6000803e3d6000fd5b505050506040513d602081101561180357600080fd5b8101908080519060200190929190505050161180156118b4575060008e73ffffffffffffffffffffffffffffffffffffffff1663d0c93a7c6040518163ffffffff1660e01b815260040160206040518083038186803b15801561186557600080fd5b505afa158015611879573d6000803e3d6000fd5b505050506040513d602081101561188f57600080fd5b810190808051906020019092919050505060020b8d60020b816118ae57fe5b0760020b145b80156118c557508b60020b8d60020b135b945060008360ff166001901b8f73ffffffffffffffffffffffffffffffffffffffff16635339c296876040518263ffffffff1660e01b8152600401808260010b815260200191505060206040518083038186803b15801561192557600080fd5b505afa158015611939573d6000803e3d6000fd5b505050506040513d602081101561194f57600080fd5b810190808051906020019092919050505016118015611a00575060008e73ffffffffffffffffffffffffffffffffffffffff1663d0c93a7c6040518163ffffffff1660e01b815260040160206040518083038186803b1580156119b157600080fd5b505afa1580156119c5573d6000803e3d6000fd5b505050506040513d60208110156119db57600080fd5b810190808051906020019092919050505060020b8e60020b816119fa57fe5b0760020b145b8015611a1157508b60020b8d60020b125b95508160010b8460010b1280611a3e57508160010b8460010b148015611a3d57508060ff168360ff1611155b5b15611a5457839950829750819850809650611a61565b8199508097508398508296505b5050505060008460ff167fffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffff901b90505b8560010b8760010b13611bb2578560010b8760010b1415611adb578360ff0360ff167fffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffff901c811690505b6000818c73ffffffffffffffffffffffffffffffffffffffff16635339c2968a6040518263ffffffff1660e01b8152600401808260010b815260200191505060206040518083038186803b158015611b3257600080fd5b505afa158015611b46573d6000803e3d6000fd5b505050506040513d6020811015611b5c57600080fd5b8101908080519060200190929190505050169050611b7981611c26565b61ffff168901985087806001019850507fffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffff915050611a91565b8115611bbf576001880397505b8215611bcc576001880397505b505050505050509392505050565b6000611be683836112d2565b90508073ffffffffffffffffffffffffffffffffffffffff163373ffffffffffffffffffffffffffffffffffffffff1614611c2057600080fd5b92915050565b600080600090505b60008314611c4b5780806001019150506001830383169250611c2e565b80915050919050565b6040518060600160405280600073ffffffffffffffffffffffffffffffffffffffff168152602001600073ffffffffffffffffffffffffffffffffffffffff168152602001600062ffffff1681525090565b6000611cb9611cb4846125fa565b6125c9565b905082815260208101848484011115611cd157600080fd5b611cdc84828561279d565b509392505050565b6000611cf7611cf28461262a565b6125c9565b905082815260208101848484011115611d0f57600080fd5b611d1a8482856127ac565b509392505050565b600081359050611d3181612842565b92915050565b600081519050611d4681612859565b92915050565b600082601f830112611d5d57600080fd5b8135611d6d848260208601611ca6565b91505092915050565b600081519050611d8581612870565b92915050565b600081359050611d9a81612887565b92915050565b600081519050611daf81612887565b92915050565b600082601f830112611dc657600080fd5b8151611dd6848260208601611ce4565b91505092915050565b600060a08284031215611df157600080fd5b611dfb60a06125c9565b90506000611e0b84828501611d22565b6000830152506020611e1f84828501611d22565b6020830152506040611e3384828501611f43565b6040830152506060611e4784828501611f2e565b6060830152506080611e5b84828501611eef565b60808301525092915050565b600060a08284031215611e7957600080fd5b611e8360a06125c9565b90506000611e9384828501611d22565b6000830152506020611ea784828501611d22565b6020830152506040611ebb84828501611f43565b6040830152506060611ecf84828501611f2e565b6060830152506080611ee384828501611eef565b60808301525092915050565b600081359050611efe816128b5565b92915050565b600081519050611f13816128b5565b92915050565b600081519050611f288161289e565b92915050565b600081359050611f3d816128cc565b92915050565b600081359050611f52816128e3565b92915050565b600081519050611f67816128e3565b92915050565b600081519050611f7c816128fa565b92915050565b60008060408385031215611f9557600080fd5b600083013567ffffffffffffffff811115611faf57600080fd5b611fbb85828601611d4c565b9250506020611fcc85828601611f43565b9150509250929050565b60008060408385031215611fe957600080fd5b6000611ff785828601611da0565b925050602061200885828601611da0565b9150509250929050565b60008060006060848603121561202757600080fd5b600061203586828701611d8b565b935050602061204686828701611d8b565b925050604084013567ffffffffffffffff81111561206357600080fd5b61206f86828701611d4c565b9150509250925092565b60006020828403121561208b57600080fd5b600082015167ffffffffffffffff8111156120a557600080fd5b6120b184828501611db5565b91505092915050565b600060a082840312156120cc57600080fd5b60006120da84828501611ddf565b91505092915050565b600060a082840312156120f557600080fd5b600061210384828501611e67565b91505092915050565b600080600080600080600060e0888a03121561212757600080fd5b60006121358a828b01611f04565b97505060206121468a828b01611d76565b96505060406121578a828b01611f19565b95505060606121688a828b01611f19565b94505060806121798a828b01611f19565b93505060a061218a8a828b01611f6d565b92505060c061219b8a828b01611d37565b91505092959891949750929550565b6000806000606084860312156121bf57600080fd5b60006121cd86828701611f58565b93505060206121de86828701611f04565b92505060406121ef86828701611d76565b9150509250925092565b600061220583836123db565b60208301905092915050565b600061221d838361241f565b60208301905092915050565b61223281612704565b82525050565b61224961224482612704565b6127df565b82525050565b600061225a8261267a565b61226481856126c0565b935061226f8361265a565b8060005b838110156122a057815161228788826121f9565b9750612292836126a6565b925050600181019050612273565b5085935050505092915050565b60006122b882612685565b6122c281856126d1565b93506122cd8361266a565b8060005b838110156122fe5781516122e58882612211565b97506122f0836126b3565b9250506001810190506122d1565b5085935050505092915050565b61231481612716565b82525050565b600061232582612690565b61232f81856126e2565b935061233f8185602086016127ac565b61234881612817565b840191505092915050565b61235c8161272f565b82525050565b600061236d8261269b565b61237781856126f3565b93506123878185602086016127ac565b61239081612817565b840191505092915050565b60006123a86010836126f3565b91507f556e6578706563746564206572726f72000000000000000000000000000000006000830152602082019050919050565b6123e481612747565b82525050565b6123f381612747565b82525050565b61240a61240582612767565b612803565b82525050565b61241981612776565b82525050565b61242881612780565b82525050565b61243781612780565b82525050565b60006124498286612238565b60148201915061245982856123f9565b6003820191506124698284612238565b601482019150819050949350505050565b600060208201905061248f6000830184612229565b92915050565b600060a0820190506124aa6000830188612229565b6124b7602083018761230b565b6124c46040830186612353565b6124d160608301856123ea565b81810360808301526124e3818461231a565b90509695505050505050565b600060208201905081810360008301526125098184612362565b905092915050565b6000602082019050818103600083015261252a8161239b565b9050919050565b60006080820190506125466000830187612410565b8181036020830152612558818661224f565b9050818103604083015261256c81856122ad565b905061257b6060830184612410565b95945050505050565b60006080820190506125996000830187612410565b6125a660208301866123ea565b6125b3604083018561242e565b6125c06060830184612410565b95945050505050565b6000604051905081810181811067ffffffffffffffff821117156125f0576125ef612815565b5b8060405250919050565b600067ffffffffffffffff82111561261557612614612815565b5b601f19601f8301169050602081019050919050565b600067ffffffffffffffff82111561264557612644612815565b5b601f19601f8301169050602081019050919050565b6000819050602082019050919050565b6000819050602082019050919050565b600081519050919050565b600081519050919050565b600081519050919050565b600081519050919050565b6000602082019050919050565b6000602082019050919050565b600082825260208201905092915050565b600082825260208201905092915050565b600082825260208201905092915050565b600082825260208201905092915050565b600061270f82612747565b9050919050565b60008115159050919050565b60008160020b9050919050565b6000819050919050565b600061ffff82169050919050565b600073ffffffffffffffffffffffffffffffffffffffff82169050919050565b600062ffffff82169050919050565b6000819050919050565b600063ffffffff82169050919050565b600060ff82169050919050565b82818337600083830152505050565b60005b838110156127ca5780820151818401526020810190506127af565b838111156127d9576000848401525b50505050565b60006127ea826127f1565b9050919050565b60006127fc82612835565b9050919050565b600061280e82612828565b9050919050565bfe5b6000601f19601f8301169050919050565b60008160e81b9050919050565b60008160601b9050919050565b61284b81612704565b811461285657600080fd5b50565b61286281612716565b811461286d57600080fd5b50565b61287981612722565b811461288457600080fd5b50565b6128908161272f565b811461289b57600080fd5b50565b6128a781612739565b81146128b257600080fd5b50565b6128be81612747565b81146128c957600080fd5b50565b6128d581612767565b81146128e057600080fd5b50565b6128ec81612776565b81146128f757600080fd5b50565b61290381612790565b811461290e57600080fd5b5056fea26469706673582212207f2302eba82d18b7e80043b12175ae7e1913ecf50ef1fc365ffeba5353f8aa5864736f6c63430007060033",
        "sourceMap": "983:9333:15:-:0;;;1309:90;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;:::i;:::-;1379:8;1389:6;532:8:12;522:18;;;;;;;;;;;;558:6;550:14;;;;;;;;;;;;466:105;;1309:90:15;;983:9333;;7:143:22;;95:6;89:13;80:22;;111:33;138:5;111:33;:::i;:::-;70:80;;;;:::o;156:440::-;;;292:2;280:9;271:7;267:23;263:32;260:2;;;308:1;305;298:12;260:2;351:1;376:64;432:7;423:6;412:9;408:22;376:64;:::i;:::-;366:74;;322:128;489:2;515:64;571:7;562:6;551:9;547:22;515:64;:::i;:::-;505:74;;460:129;250:346;;;;;:::o;602:96::-;;668:24;686:5;668:24;:::i;:::-;657:35;;647:51;;;:::o;704:126::-;;781:42;774:5;770:54;759:65;;749:81;;;:::o;836:122::-;909:24;927:5;909:24;:::i;:::-;902:5;899:35;889:2;;948:1;945;938:12;889:2;879:79;:::o;983:9333:15:-;;;;;;;;;;;;;;;;;",
        "linkReferences": {}
    },
    "deployedBytecode": {
        "object": "0x608060405234801561001057600080fd5b506004361061007d5760003560e01c8063c45a01551161005b578063c45a015514610106578063c6a5026a14610124578063cdca175314610157578063fa461e331461018a5761007d565b80632f80bb1d146100825780634aa4a4fc146100b5578063bd21704a146100d3575b600080fd5b61009c60048036038101906100979190611f82565b6101a6565b6040516100ac9493929190612531565b60405180910390f35b6100bd6103b5565b6040516100ca919061247a565b60405180910390f35b6100ed60048036038101906100e891906120e3565b6103d9565b6040516100fd9493929190612584565b60405180910390f35b61010e610616565b60405161011b919061247a565b60405180910390f35b61013e600480360381019061013991906120ba565b61063a565b60405161014e9493929190612584565b60405180910390f35b610171600480360381019061016c9190611f82565b61081d565b6040516101819493929190612531565b60405180910390f35b6101a4600480360381019061019f9190612012565b610a2c565b005b600060608060006101b686610bea565b67ffffffffffffffff811180156101cc57600080fd5b506040519080825280602002602001820160405280156101fb5781602001602082028036833780820191505090505b50925061020786610bea565b67ffffffffffffffff8111801561021d57600080fd5b5060405190808252806020026020018201604052801561024c5781602001602082028036833780820191505090505b50915060005b6001156103aa5760008060006102678a610c05565b9250925092506000806000806102ea6040518060a001604052808873ffffffffffffffffffffffffffffffffffffffff1681526020018973ffffffffffffffffffffffffffffffffffffffff1681526020018f81526020018762ffffff168152602001600073ffffffffffffffffffffffffffffffffffffffff168152506103d9565b9350935093509350828b89815181106102ff57fe5b602002602001019073ffffffffffffffffffffffffffffffffffffffff16908173ffffffffffffffffffffffffffffffffffffffff1681525050818a898151811061034657fe5b602002602001019063ffffffff16908163ffffffff1681525050839c50808901985087806001019850506103798e610c56565b1561038e576103878e610c71565b9d5061039e565b8c9b5050505050505050506103ac565b50505050505050610252565b505b92959194509250565b7f000000000000000000000000000000000000000000000000000000000000000081565b6000806000806000856020015173ffffffffffffffffffffffffffffffffffffffff16866000015173ffffffffffffffffffffffffffffffffffffffff161090506000610433876000015188602001518960600151610c9a565b90506000876080015173ffffffffffffffffffffffffffffffffffffffff1614156104645786604001516000819055505b60005a90508173ffffffffffffffffffffffffffffffffffffffff1663128acb0830856104948c60400151610cd9565b60000360008d6080015173ffffffffffffffffffffffffffffffffffffffff16146104c3578c608001516104f0565b876104e557600173fffd8963efd1fc6a506488495d951d5263988d26036104ef565b60016401000276a3015b5b8d602001518e606001518f600001516040516020016105119392919061243d565b6040516020818303038152906040526040518663ffffffff1660e01b8152600401610540959493929190612495565b6040805180830381600087803b15801561055957600080fd5b505af192505050801561058a57506040513d601f19601f820116820180604052508101906105879190611fd6565b60015b610609573d80600081146105ba576040519150601f19603f3d011682016040523d82523d6000602084013e6105bf565b606091505b505a820394506000896080015173ffffffffffffffffffffffffffffffffffffffff1614156105ed57600080555b6105f8818487610d0f565b97509750975097505050505061060f565b50505050505b9193509193565b7f000000000000000000000000000000000000000000000000000000000000000081565b6000806000806000856020015173ffffffffffffffffffffffffffffffffffffffff16866000015173ffffffffffffffffffffffffffffffffffffffff161090506000610694876000015188602001518960600151610c9a565b905060005a90508173ffffffffffffffffffffffffffffffffffffffff1663128acb0830856106c68c60400151610cd9565b60008d6080015173ffffffffffffffffffffffffffffffffffffffff16146106f2578c6080015161071f565b8761071457600173fffd8963efd1fc6a506488495d951d5263988d260361071e565b60016401000276a3015b5b8d600001518e606001518f602001516040516020016107409392919061243d565b6040516020818303038152906040526040518663ffffffff1660e01b815260040161076f959493929190612495565b6040805180830381600087803b15801561078857600080fd5b505af19250505080156107b957506040513d601f19601f820116820180604052508101906107b69190611fd6565b60015b610810573d80600081146107e9576040519150601f19603f3d011682016040523d82523d6000602084013e6107ee565b606091505b505a820394506107ff818487610d0f565b975097509750975050505050610816565b50505050505b9193509193565b6000606080600061082d86610bea565b67ffffffffffffffff8111801561084357600080fd5b506040519080825280602002602001820160405280156108725781602001602082028036833780820191505090505b50925061087e86610bea565b67ffffffffffffffff8111801561089457600080fd5b506040519080825280602002602001820160405280156108c35781602001602082028036833780820191505090505b50915060005b600115610a215760008060006108de8a610c05565b9250925092506000806000806109616040518060a001604052808973ffffffffffffffffffffffffffffffffffffffff1681526020018873ffffffffffffffffffffffffffffffffffffffff1681526020018f81526020018762ffffff168152602001600073ffffffffffffffffffffffffffffffffffffffff1681525061063a565b9350935093509350828b898151811061097657fe5b602002602001019073ffffffffffffffffffffffffffffffffffffffff16908173ffffffffffffffffffffffffffffffffffffffff1681525050818a89815181106109bd57fe5b602002602001019063ffffffff16908163ffffffff1681525050839c50808901985087806001019850506109f08e610c56565b15610a05576109fe8e610c71565b9d50610a15565b8c9b505050505050505050610a23565b505050505050506108c9565b505b92959194509250565b6000831380610a3b5750600082135b610a4457600080fd5b6000806000610a5284610c05565b925092509250610a847f0000000000000000000000000000000000000000000000000000000000000000848484610e09565b506000806000808913610aca578573ffffffffffffffffffffffffffffffffffffffff168573ffffffffffffffffffffffffffffffffffffffff1610888a600003610aff565b8473ffffffffffffffffffffffffffffffffffffffff168673ffffffffffffffffffffffffffffffffffffffff161089896000035b9250925092506000610b12878787610c9a565b90506000808273ffffffffffffffffffffffffffffffffffffffff16633850c7bd6040518163ffffffff1660e01b815260040160e06040518083038186803b158015610b5d57600080fd5b505afa158015610b71573d6000803e3d6000fd5b505050506040513d601f19601f82011682018060405250810190610b95919061210c565b5050505050915091508515610bbb57604051848152826020820152816040820152606081fd5b6000805414610bd3576000548414610bd257600080fd5b5b604051858152826020820152816040820152606081fd5b60006003601401601483510381610bfd57fe5b049050919050565b6000806000610c1e600085610e2990919063ffffffff16565b9250610c34601485610f4290919063ffffffff16565b9050610c4d600360140185610e2990919063ffffffff16565b91509193909250565b60006003601401601460036014010101825110159050919050565b6060610c93600360140160036014018451038461104c9092919063ffffffff16565b9050919050565b6000610cd07f0000000000000000000000000000000000000000000000000000000000000000610ccb868686611236565b6112d2565b90509392505050565b60007f80000000000000000000000000000000000000000000000000000000000000008210610d0757600080fd5b819050919050565b6000806000806000808773ffffffffffffffffffffffffffffffffffffffff16633850c7bd6040518163ffffffff1660e01b815260040160e06040518083038186803b158015610d5e57600080fd5b505afa158015610d72573d6000803e3d6000fd5b505050506040513d601f19601f82011682018060405250810190610d96919061210c565b9091929394955090919293509091925090915090505080925050610db98961142d565b809350819750829850505050610df082828a73ffffffffffffffffffffffffffffffffffffffff166114f79092919063ffffffff16565b9350858585899550955095509550505093509350935093565b6000610e1f85610e1a868686611236565b611bda565b9050949350505050565b600081601483011015610ea4576040517f08c379a00000000000000000000000000000000000000000000000000000000081526004018080602001828103825260128152602001807f746f416464726573735f6f766572666c6f77000000000000000000000000000081525060200191505060405180910390fd5b6014820183511015610f1e576040517f08c379a00000000000000000000000000000000000000000000000000000000081526004018080602001828103825260158152602001807f746f416464726573735f6f75744f66426f756e6473000000000000000000000081525060200191505060405180910390fd5b60006c01000000000000000000000000836020860101510490508091505092915050565b600081600383011015610fbd576040517f08c379a00000000000000000000000000000000000000000000000000000000081526004018080602001828103825260118152602001807f746f55696e7432345f6f766572666c6f7700000000000000000000000000000081525060200191505060405180910390fd5b6003820183511015611037576040517f08c379a00000000000000000000000000000000000000000000000000000000081526004018080602001828103825260148152602001807f746f55696e7432345f6f75744f66426f756e647300000000000000000000000081525060200191505060405180910390fd5b60008260038501015190508091505092915050565b606081601f830110156110c7576040517f08c379a000000000000000000000000000000000000000000000000000000000815260040180806020018281038252600e8152602001807f736c6963655f6f766572666c6f7700000000000000000000000000000000000081525060200191505060405180910390fd5b82828401101561113f576040517f08c379a000000000000000000000000000000000000000000000000000000000815260040180806020018281038252600e8152602001807f736c6963655f6f766572666c6f7700000000000000000000000000000000000081525060200191505060405180910390fd5b818301845110156111b8576040517f08c379a00000000000000000000000000000000000000000000000000000000081526004018080602001828103825260118152602001807f736c6963655f6f75744f66426f756e647300000000000000000000000000000081525060200191505060405180910390fd5b60608215600081146111d9576040519150600082526020820160405261122a565b6040519150601f8416801560200281840101858101878315602002848b0101015b8183101561121757805183526020830192506020810190506111fa565b50868552601f19601f8301166040525050505b50809150509392505050565b61123e611c54565b8273ffffffffffffffffffffffffffffffffffffffff168473ffffffffffffffffffffffffffffffffffffffff16111561127d57828480945081955050505b60405180606001604052808573ffffffffffffffffffffffffffffffffffffffff1681526020018473ffffffffffffffffffffffffffffffffffffffff1681526020018362ffffff1681525090509392505050565b6000816020015173ffffffffffffffffffffffffffffffffffffffff16826000015173ffffffffffffffffffffffffffffffffffffffff161061131457600080fd5b82826000015183602001518460400151604051602001808473ffffffffffffffffffffffffffffffffffffffff1681526020018373ffffffffffffffffffffffffffffffffffffffff1681526020018262ffffff1681526020019350505050604051602081830303815290604052805190602001207fe34f199b19b2b4f47f68442619d555527d244f78a3297ea89325f843f87b8b5460001b60405160200180807fff000000000000000000000000000000000000000000000000000000000000008152506001018473ffffffffffffffffffffffffffffffffffffffff1660601b815260140183815260200182815260200193505050506040516020818303038152906040528051906020012060001c905092915050565b600080600060608451146114d657604484511015611480576040517f08c379a000000000000000000000000000000000000000000000000000000000815260040161147790612511565b60405180910390fd5b6004840193508380602001905181019061149a9190612079565b6040517f08c379a00000000000000000000000000000000000000000000000000000000081526004016114cd91906124ef565b60405180910390fd5b838060200190518101906114ea91906121aa565b9250925092509193909250565b60008060008060008060008060088b73ffffffffffffffffffffffffffffffffffffffff1663d0c93a7c6040518163ffffffff1660e01b815260040160206040518083038186803b15801561154b57600080fd5b505afa15801561155f573d6000803e3d6000fd5b505050506040513d602081101561157557600080fd5b810190808051906020019092919050505060020b8b60020b8161159457fe5b0560020b901d905060006101008c73ffffffffffffffffffffffffffffffffffffffff1663d0c93a7c6040518163ffffffff1660e01b815260040160206040518083038186803b1580156115e757600080fd5b505afa1580156115fb573d6000803e3d6000fd5b505050506040513d602081101561161157600080fd5b810190808051906020019092919050505060020b8c60020b8161163057fe5b0560020b8161163b57fe5b079050600060088d73ffffffffffffffffffffffffffffffffffffffff1663d0c93a7c6040518163ffffffff1660e01b815260040160206040518083038186803b15801561168857600080fd5b505afa15801561169c573d6000803e3d6000fd5b505050506040513d60208110156116b257600080fd5b810190808051906020019092919050505060020b8c60020b816116d157fe5b0560020b901d905060006101008e73ffffffffffffffffffffffffffffffffffffffff1663d0c93a7c6040518163ffffffff1660e01b815260040160206040518083038186803b15801561172457600080fd5b505afa158015611738573d6000803e3d6000fd5b505050506040513d602081101561174e57600080fd5b810190808051906020019092919050505060020b8d60020b8161176d57fe5b0560020b8161177857fe5b07905060008160ff166001901b8f73ffffffffffffffffffffffffffffffffffffffff16635339c296856040518263ffffffff1660e01b8152600401808260010b815260200191505060206040518083038186803b1580156117d957600080fd5b505afa1580156117ed573d6000803e3d6000fd5b505050506040513d602081101561180357600080fd5b8101908080519060200190929190505050161180156118b4575060008e73ffffffffffffffffffffffffffffffffffffffff1663d0c93a7c6040518163ffffffff1660e01b815260040160206040518083038186803b15801561186557600080fd5b505afa158015611879573d6000803e3d6000fd5b505050506040513d602081101561188f57600080fd5b810190808051906020019092919050505060020b8d60020b816118ae57fe5b0760020b145b80156118c557508b60020b8d60020b135b945060008360ff166001901b8f73ffffffffffffffffffffffffffffffffffffffff16635339c296876040518263ffffffff1660e01b8152600401808260010b815260200191505060206040518083038186803b15801561192557600080fd5b505afa158015611939573d6000803e3d6000fd5b505050506040513d602081101561194f57600080fd5b810190808051906020019092919050505016118015611a00575060008e73ffffffffffffffffffffffffffffffffffffffff1663d0c93a7c6040518163ffffffff1660e01b815260040160206040518083038186803b1580156119b157600080fd5b505afa1580156119c5573d6000803e3d6000fd5b505050506040513d60208110156119db57600080fd5b810190808051906020019092919050505060020b8e60020b816119fa57fe5b0760020b145b8015611a1157508b60020b8d60020b125b95508160010b8460010b1280611a3e57508160010b8460010b148015611a3d57508060ff168360ff1611155b5b15611a5457839950829750819850809650611a61565b8199508097508398508296505b5050505060008460ff167fffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffff901b90505b8560010b8760010b13611bb2578560010b8760010b1415611adb578360ff0360ff167fffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffff901c811690505b6000818c73ffffffffffffffffffffffffffffffffffffffff16635339c2968a6040518263ffffffff1660e01b8152600401808260010b815260200191505060206040518083038186803b158015611b3257600080fd5b505afa158015611b46573d6000803e3d6000fd5b505050506040513d6020811015611b5c57600080fd5b8101908080519060200190929190505050169050611b7981611c26565b61ffff168901985087806001019850507fffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffff915050611a91565b8115611bbf576001880397505b8215611bcc576001880397505b505050505050509392505050565b6000611be683836112d2565b90508073ffffffffffffffffffffffffffffffffffffffff163373ffffffffffffffffffffffffffffffffffffffff1614611c2057600080fd5b92915050565b600080600090505b60008314611c4b5780806001019150506001830383169250611c2e565b80915050919050565b6040518060600160405280600073ffffffffffffffffffffffffffffffffffffffff168152602001600073ffffffffffffffffffffffffffffffffffffffff168152602001600062ffffff1681525090565b6000611cb9611cb4846125fa565b6125c9565b905082815260208101848484011115611cd157600080fd5b611cdc84828561279d565b509392505050565b6000611cf7611cf28461262a565b6125c9565b905082815260208101848484011115611d0f57600080fd5b611d1a8482856127ac565b509392505050565b600081359050611d3181612842565b92915050565b600081519050611d4681612859565b92915050565b600082601f830112611d5d57600080fd5b8135611d6d848260208601611ca6565b91505092915050565b600081519050611d8581612870565b92915050565b600081359050611d9a81612887565b92915050565b600081519050611daf81612887565b92915050565b600082601f830112611dc657600080fd5b8151611dd6848260208601611ce4565b91505092915050565b600060a08284031215611df157600080fd5b611dfb60a06125c9565b90506000611e0b84828501611d22565b6000830152506020611e1f84828501611d22565b6020830152506040611e3384828501611f43565b6040830152506060611e4784828501611f2e565b6060830152506080611e5b84828501611eef565b60808301525092915050565b600060a08284031215611e7957600080fd5b611e8360a06125c9565b90506000611e9384828501611d22565b6000830152506020611ea784828501611d22565b6020830152506040611ebb84828501611f43565b6040830152506060611ecf84828501611f2e565b6060830152506080611ee384828501611eef565b60808301525092915050565b600081359050611efe816128b5565b92915050565b600081519050611f13816128b5565b92915050565b600081519050611f288161289e565b92915050565b600081359050611f3d816128cc565b92915050565b600081359050611f52816128e3565b92915050565b600081519050611f67816128e3565b92915050565b600081519050611f7c816128fa565b92915050565b60008060408385031215611f9557600080fd5b600083013567ffffffffffffffff811115611faf57600080fd5b611fbb85828601611d4c565b9250506020611fcc85828601611f43565b9150509250929050565b60008060408385031215611fe957600080fd5b6000611ff785828601611da0565b925050602061200885828601611da0565b9150509250929050565b60008060006060848603121561202757600080fd5b600061203586828701611d8b565b935050602061204686828701611d8b565b925050604084013567ffffffffffffffff81111561206357600080fd5b61206f86828701611d4c565b9150509250925092565b60006020828403121561208b57600080fd5b600082015167ffffffffffffffff8111156120a557600080fd5b6120b184828501611db5565b91505092915050565b600060a082840312156120cc57600080fd5b60006120da84828501611ddf565b91505092915050565b600060a082840312156120f557600080fd5b600061210384828501611e67565b91505092915050565b600080600080600080600060e0888a03121561212757600080fd5b60006121358a828b01611f04565b97505060206121468a828b01611d76565b96505060406121578a828b01611f19565b95505060606121688a828b01611f19565b94505060806121798a828b01611f19565b93505060a061218a8a828b01611f6d565b92505060c061219b8a828b01611d37565b91505092959891949750929550565b6000806000606084860312156121bf57600080fd5b60006121cd86828701611f58565b93505060206121de86828701611f04565b92505060406121ef86828701611d76565b9150509250925092565b600061220583836123db565b60208301905092915050565b600061221d838361241f565b60208301905092915050565b61223281612704565b82525050565b61224961224482612704565b6127df565b82525050565b600061225a8261267a565b61226481856126c0565b935061226f8361265a565b8060005b838110156122a057815161228788826121f9565b9750612292836126a6565b925050600181019050612273565b5085935050505092915050565b60006122b882612685565b6122c281856126d1565b93506122cd8361266a565b8060005b838110156122fe5781516122e58882612211565b97506122f0836126b3565b9250506001810190506122d1565b5085935050505092915050565b61231481612716565b82525050565b600061232582612690565b61232f81856126e2565b935061233f8185602086016127ac565b61234881612817565b840191505092915050565b61235c8161272f565b82525050565b600061236d8261269b565b61237781856126f3565b93506123878185602086016127ac565b61239081612817565b840191505092915050565b60006123a86010836126f3565b91507f556e6578706563746564206572726f72000000000000000000000000000000006000830152602082019050919050565b6123e481612747565b82525050565b6123f381612747565b82525050565b61240a61240582612767565b612803565b82525050565b61241981612776565b82525050565b61242881612780565b82525050565b61243781612780565b82525050565b60006124498286612238565b60148201915061245982856123f9565b6003820191506124698284612238565b601482019150819050949350505050565b600060208201905061248f6000830184612229565b92915050565b600060a0820190506124aa6000830188612229565b6124b7602083018761230b565b6124c46040830186612353565b6124d160608301856123ea565b81810360808301526124e3818461231a565b90509695505050505050565b600060208201905081810360008301526125098184612362565b905092915050565b6000602082019050818103600083015261252a8161239b565b9050919050565b60006080820190506125466000830187612410565b8181036020830152612558818661224f565b9050818103604083015261256c81856122ad565b905061257b6060830184612410565b95945050505050565b60006080820190506125996000830187612410565b6125a660208301866123ea565b6125b3604083018561242e565b6125c06060830184612410565b95945050505050565b6000604051905081810181811067ffffffffffffffff821117156125f0576125ef612815565b5b8060405250919050565b600067ffffffffffffffff82111561261557612614612815565b5b601f19601f8301169050602081019050919050565b600067ffffffffffffffff82111561264557612644612815565b5b601f19601f8301169050602081019050919050565b6000819050602082019050919050565b6000819050602082019050919050565b600081519050919050565b600081519050919050565b600081519050919050565b600081519050919050565b6000602082019050919050565b6000602082019050919050565b600082825260208201905092915050565b600082825260208201905092915050565b600082825260208201905092915050565b600082825260208201905092915050565b600061270f82612747565b9050919050565b60008115159050919050565b60008160020b9050919050565b6000819050919050565b600061ffff82169050919050565b600073ffffffffffffffffffffffffffffffffffffffff82169050919050565b600062ffffff82169050919050565b6000819050919050565b600063ffffffff82169050919050565b600060ff82169050919050565b82818337600083830152505050565b60005b838110156127ca5780820151818401526020810190506127af565b838111156127d9576000848401525b50505050565b60006127ea826127f1565b9050919050565b60006127fc82612835565b9050919050565b600061280e82612828565b9050919050565bfe5b6000601f19601f8301169050919050565b60008160e81b9050919050565b60008160601b9050919050565b61284b81612704565b811461285657600080fd5b50565b61286281612716565b811461286d57600080fd5b50565b61287981612722565b811461288457600080fd5b50565b6128908161272f565b811461289b57600080fd5b50565b6128a781612739565b81146128b257600080fd5b50565b6128be81612747565b81146128c957600080fd5b50565b6128d581612767565b81146128e057600080fd5b50565b6128ec81612776565b81146128f757600080fd5b50565b61290381612790565b811461290e57600080fd5b5056fea26469706673582212207f2302eba82d18b7e80043b12175ae7e1913ecf50ef1fc365ffeba5353f8aa5864736f6c63430007060033",
        "sourceMap": "983:9333:15:-:0;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;8694:1620;;;;;;;;;;;;;:::i;:::-;;:::i;:::-;;;;;;;;;;:::i;:::-;;;;;;;;420:39:12;;;:::i;:::-;;;;;;;:::i;:::-;;;;;;;;7313:1375:15;;;;;;;;;;;;;:::i;:::-;;:::i;:::-;;;;;;;;;;:::i;:::-;;;;;;;;328:41:12;;;:::i;:::-;;;;;;;:::i;:::-;;;;;;;;4579:1104:15;;;;;;;;;;;;;:::i;:::-;;:::i;:::-;;;;;;;;;;:::i;:::-;;;;;;;;5689:1618;;;;;;;;;;;;;:::i;:::-;;:::i;:::-;;;;;;;;;;:::i;:::-;;;;;;;;1703:1605;;;;;;;;;;;;;:::i;:::-;;:::i;:::-;;8694:1620;8820:16;8850:38;8902:43;8959:19;9041:15;:4;:13;:15::i;:::-;9027:30;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;9003:54;;9110:15;:4;:13;:15::i;:::-;9097:29;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;9067:59;;9137:9;9160:1148;9167:4;9160:1148;;;9188:16;9206:15;9223:10;9237:22;:4;:20;:22::i;:::-;9187:72;;;;;;9354:17;9373:26;9401:31;9434:20;9474:323;9518:261;;;;;;;;9582:7;9518:261;;;;;;9625:8;9518:261;;;;;;9667:9;9518:261;;;;9707:3;9518:261;;;;;;9755:1;9518:261;;;;;9474:22;:323::i;:::-;9353:444;;;;;;;;9839:18;9812:21;9834:1;9812:24;;;;;;;;;;;;;:45;;;;;;;;;;;9904:24;9871:27;9899:1;9871:30;;;;;;;;;;;;;:57;;;;;;;;;;;9954:9;9942:21;;9992:12;9977:27;;;;10018:3;;;;;;;10095:23;:4;:21;:23::i;:::-;10091:207;;;10145:16;:4;:14;:16::i;:::-;10138:23;;10091:207;;;10208:9;10200:83;;;;;;;;;;;;10091:207;9160:1148;;;;;;;;;;8694:1620;;;;;;;;;:::o;420:39:12:-;;;:::o;7313:1375:15:-;7451:16;7481:25;7520:30;7564:19;7608:15;7643:6;:15;;;7626:32;;:6;:14;;;:32;;;7608:50;;7668:19;7690:52;7698:6;:14;;;7714:6;:15;;;7731:6;:10;;;7690:7;:52::i;:::-;7668:74;;7894:1;7866:6;:24;;;:29;;;7862:66;;;7915:6;:13;;;7897:15;:31;;;;7862:66;7938:17;7958:9;7938:29;;7993:4;:9;;;8028:4;8101:10;8130:24;:6;:13;;;:22;:24::i;:::-;8129:25;;8200:1;8172:6;:24;;;:29;;;:171;;8319:6;:24;;;8172:171;;;8225:10;:70;;8294:1;997:49:11;8268:27:15;8225:70;;;8264:1;817:10:11;8238:27:15;8225:70;8172:171;8378:6;:15;;;8395:6;:10;;;8407:6;:14;;;8361:61;;;;;;;;;;:::i;:::-;;;;;;;;;;;;;7993:443;;;;;;;;;;;;;;;;;;;:::i;:::-;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;:::i;:::-;;;7977:705;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;8516:9;8504;:21;8490:35;;8571:1;8543:6;:24;;;:29;;;8539:57;;;8581:15;8574:22;;8539:57;8632:39;8645:6;8653:4;8659:11;8632:12;:39::i;:::-;8625:46;;;;;;;;;;;;;;7977:705;;;7313:1375;;;;;;;;;:::o;328:41:12:-;;;:::o;4579:1104:15:-;4715:17;4746:25;4785:30;4829:19;4873:15;4908:6;:15;;;4891:32;;:6;:14;;;:32;;;4873:50;;4933:19;4955:52;4963:6;:14;;;4979:6;:15;;;4996:6;:10;;;4955:7;:52::i;:::-;4933:74;;5018:17;5038:9;5018:29;;5073:4;:9;;;5108:4;5181:10;5209:26;:6;:15;;;:24;:26::i;:::-;5281:1;5253:6;:24;;;:29;;;:171;;5400:6;:24;;;5253:171;;;5306:10;:70;;5375:1;997:49:11;5349:27:15;5306:70;;;5345:1;817:10:11;5319:27:15;5306:70;5253:171;5459:6;:14;;;5475:6;:10;;;5487:6;:15;;;5442:61;;;;;;;;;;:::i;:::-;;;;;;;;;;;;;5073:444;;;;;;;;;;;;;;;;;;;:::i;:::-;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;:::i;:::-;;;5057:620;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;5597:9;5585;:21;5571:35;;5627:39;5640:6;5648:4;5654:11;5627:12;:39::i;:::-;5620:46;;;;;;;;;;;;;;5057:620;;;4579:1104;;;;;;;;;:::o;5689:1618::-;5813:17;5844:38;5896:43;5953:19;6035:15;:4;:13;:15::i;:::-;6021:30;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;5997:54;;6104:15;:4;:13;:15::i;:::-;6091:29;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;6061:59;;6131:9;6154:1147;6161:4;6154:1147;;;6182:15;6199:16;6217:10;6231:22;:4;:20;:22::i;:::-;6181:72;;;;;;6348:18;6368:26;6396:31;6429:20;6469:322;6512:261;;;;;;;;6575:7;6512:261;;;;;;6618:8;6512:261;;;;;;6696:8;6512:261;;;;6657:3;6512:261;;;;;;6749:1;6512:261;;;;;6469:21;:322::i;:::-;6347:444;;;;;;;;6833:18;6806:21;6828:1;6806:24;;;;;;;;;;;;;:45;;;;;;;;;;;6898:24;6865:27;6893:1;6865:30;;;;;;;;;;;;;:57;;;;;;;;;;;6947:10;6936:21;;6986:12;6971:27;;;;7012:3;;;;;;;7089:23;:4;:21;:23::i;:::-;7085:206;;;7139:16;:4;:14;:16::i;:::-;7132:23;;7085:206;;;7202:8;7194:82;;;;;;;;;;;;7085:206;6154:1147;;;;;;;;;;5689:1618;;;;;;;;;:::o;1703:1605::-;1881:1;1866:12;:16;:36;;;;1901:1;1886:12;:16;1866:36;1858:45;;;;;;1977:15;1994:16;2012:10;2026:22;:4;:20;:22::i;:::-;1976:72;;;;;;2058:66;2092:7;2101;2110:8;2120:3;2058:33;:66::i;:::-;;2136:17;2155:19;2176:22;2229:1;2214:12;:16;:188;;2347:7;2336:18;;:8;:18;;;2364:12;2388;2387:13;;2214:188;;;2260:8;2250:18;;:7;:18;;;2278:12;2302;2301:13;;2214:188;2135:267;;;;;;2413:19;2435:31;2443:7;2452:8;2462:3;2435:7;:31::i;:::-;2413:53;;2477:25;2504:15;2533:4;:10;;;:12;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;:::i;:::-;2476:69;;;;;;;;;2560:12;2556:746;;;2632:4;2626:11;2666:14;2661:3;2654:27;2721:17;2714:4;2709:3;2705:14;2698:41;2779:9;2772:4;2767:3;2763:14;2756:33;2818:2;2813:3;2806:15;2597:238;2989:1;2970:15;;:20;2966:68;;3018:15;;3000:14;:33;2992:42;;;;;;2966:68;3092:4;3086:11;3126;3121:3;3114:24;3178:17;3171:4;3166:3;3162:14;3155:41;3236:9;3229:4;3224:3;3220:14;3213:33;3275:2;3270:3;3263:15;1282:235:18;1342:7;397:1;304:2;507:20;304:2;1471:4;:11;:23;1470:39;;;;;;1462:48;;1282:235;;;:::o;1779:314::-;1883:14;1911;1939:10;1983:17;1998:1;1983:4;:14;;:17;;;;:::i;:::-;1974:26;;2016:24;304:2;2016:4;:13;;:24;;;;:::i;:::-;2010:30;;2059:27;397:1;304:2;507:20;2059:4;:14;;:27;;;;:::i;:::-;2050:36;;1779:314;;;;;:::o;992:138::-;1060:4;397:1;304:2;507:20;304:2;397:1;304:2;507:20;618:23;777:24;1083:4;:11;:40;;1076:47;;992:138;;;:::o;2635:149::-;2696:12;2727:50;397:1;304:2;507:20;397:1;304:2;507:20;2751:4;:11;:25;2727:4;:10;;:50;;;;;:::i;:::-;2720:57;;2635:149;;;:::o;1405:249:15:-;1518:14;1566:80;1593:7;1602:43;1625:6;1633;1641:3;1602:22;:43::i;:::-;1566:26;:80::i;:::-;1544:103;;1405:249;;;;;:::o;924:121:9:-;976:8;1008:6;1004:1;:10;996:19;;;;;;1036:1;1025:13;;924:121;;;:::o;3907:666:15:-;4081:14;4109:25;4148:30;4192:7;4224:16;4250:15;4302:4;:10;;;:12;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;:::i;:::-;4275:39;;;;;;;;;;;;;;;;;;;;;;;;;;4365:25;4383:6;4365:17;:25::i;:::-;4324:66;;;;;;;;;;;;4427:56;4461:10;4473:9;4427:4;:33;;;;:56;;;;;:::i;:::-;4401:82;;4502:6;4510:17;4529:23;4554:11;4494:72;;;;;;;;;;3907:666;;;;;;;:::o;683:259:17:-;829:19;867:68;882:7;891:43;914:6;922;930:3;891:22;:43::i;:::-;867:14;:68::i;:::-;860:75;;683:259;;;;;;:::o;3412:416:16:-;3491:7;3533:6;3527:2;3518:6;:11;:21;;3510:52;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;3606:2;3597:6;:11;3580:6;:13;:28;;3572:62;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;3644:19;3755:27;3745:6;3738:4;3730:6;3726:17;3722:30;3716:37;3712:71;3697:86;;3810:11;3803:18;;;3412:416;;;;:::o;3834:365::-;3912:6;3952;3947:1;3938:6;:10;:20;;3930:50;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;4024:1;4015:6;:10;3998:6;:13;:27;;3990:60;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;4060:15;4149:6;4143:3;4135:6;4131:16;4127:29;4121:36;4109:48;;4184:8;4177:15;;;3834:365;;;;:::o;399:3007::-;521:12;569:7;563:2;553:7;:12;:23;;545:50;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;633:6;622:7;613:6;:16;:26;;605:53;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;702:7;693:6;:16;676:6;:13;:33;;668:63;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;742:22;812:7;805:15;842:1;837:2099;;;;3089:4;3083:11;3070:24;;3287:1;3276:9;3269:20;3339:4;3328:9;3324:20;3318:4;3311:34;798:2565;;837:2099;1031:4;1025:11;1012:24;;1726:2;1717:7;1713:16;2128:9;2121:17;2115:4;2111:28;2099:9;2088;2084:25;2080:60;2180:7;2176:2;2172:16;2448:6;2434:9;2427:17;2421:4;2417:28;2405:9;2397:6;2393:22;2389:57;2385:70;2210:461;2485:3;2481:2;2478:11;2210:461;;;2645:2;2639:9;2635:2;2628:21;2530:4;2526:2;2522:13;2516:19;;2574:4;2570:2;2566:13;2560:19;;2210:461;;;2214:263;2711:7;2700:9;2693:26;2913:2;2909:7;2904:2;2900;2896:11;2892:25;2886:4;2879:39;844:2092;;;798:2565;;3390:9;3383:16;;;399:3007;;;;;:::o;784:274:19:-;901:14;;:::i;:::-;940:6;931:15;;:6;:15;;;927:56;;;968:6;976;948:35;;;;;;;;927:56;1000:51;;;;;;;;1017:6;1000:51;;;;;;1033:6;1000:51;;;;;;1046:3;1000:51;;;;;993:58;;784:274;;;;;:::o;1305:512::-;1389:12;1434:3;:10;;;1421:23;;:3;:10;;;:23;;;1413:32;;;;;;1614:7;1668:3;:10;;;1680:3;:10;;;1692:3;:7;;;1657:43;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;1647:54;;;;;;241:66;1727:19;;1539:229;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;1508:278;;;;;;1483:317;;1455:355;;1305:512;;;;:::o;3388:513:15:-;3495:14;3523:25;3562:15;3623:2;3606:6;:13;:19;3602:231;;3661:2;3645:6;:13;:18;3641:50;;;3665:26;;;;;;;;;;:::i;:::-;;;;;;;;3641:50;3754:4;3746:6;3742:17;3732:27;;3804:6;3793:28;;;;;;;;;;;;:::i;:::-;3786:36;;;;;;;;;;;:::i;:::-;;;;;;;;3602:231;3860:6;3849:45;;;;;;;;;;;;:::i;:::-;3842:52;;;;;;3388:513;;;;;:::o;637:3305:20:-;784:30;826:18;854:19;883:17;910:18;938:26;974:25;1127:13;1186:1;1163:4;:16;;;:18;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;1150:31;;:10;:31;;;;;;;;1149:38;;;;1127:61;;1202:12;1259:3;1237:4;:16;;;:18;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;1224:31;;:10;:31;;;;;;;;1223:39;;;;;;;;1202:61;;1278:18;1341:1;1318:4;:16;;;:18;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;1306:30;;:9;:30;;;;;;;;1305:37;;;;1278:65;;1357:17;1418:3;1396:4;:16;;;:18;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;1384:30;;:9;:30;;;;;;;;1383:38;;;;;;;;1357:65;;1897:1;1881:11;1876:16;;:1;:16;;1843:4;:15;;;1859:12;1843:29;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;:50;1842:56;1841:117;;;;;1956:1;1933:4;:16;;;:18;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;1921:30;;:9;:30;;;;;;;;1920:37;;;1841:117;:161;;;;;1992:9;1979:22;;:10;:22;;;1841:161;1802:200;;2312:1;2301:6;2296:11;;:1;:11;;2268:4;:15;;;2284:7;2268:24;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;:40;2267:46;2266:108;;;;;2372:1;2349:4;:16;;;:18;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;2336:31;;:10;:31;;;;;;;;2335:38;;;2266:108;:152;;;;;2408:9;2395:22;;:10;:22;;;2266:152;2226:192;;2447:12;2437:22;;:7;:22;;;:76;;;;2475:12;2464:23;;:7;:23;;;:48;;;;;2501:11;2491:21;;:6;:21;;;;2464:48;2437:76;2433:454;;;2548:7;2533:22;;2587:6;2573:20;;2627:12;2611:28;;2672:11;2657:26;;2433:454;;;2737:12;2722:27;;2781:11;2767:25;;2826:7;2810:23;;2866:6;2851:21;;2433:454;637:3305;;;;3086:12;3122:11;3101:32;;:17;:32;;3086:47;;3143:573;3166:13;3150:29;;:12;:29;;;3143:573;;3329:13;3313:29;;:12;:29;;;3309:125;;;3405:12;3399:3;:18;3377:41;;:17;:41;;3369:4;:50;3362:57;;3309:125;3448:14;3497:4;3465;:15;;;3481:12;3465:29;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;:36;3448:53;;3542:20;3555:6;3542:12;:20::i;:::-;3515:47;;;;;;3576:14;;;;;;;3688:17;3681:24;;3143:573;;;;3730:20;3726:79;;;3793:1;3766:28;;;;3726:79;3819:21;3815:80;;;3883:1;3856:28;;;;3815:80;3905:30;;;;;;;637:3305;;;;;:::o;1189:279:17:-;1313:19;1370:44;1397:7;1406;1370:26;:44::i;:::-;1348:67;;1455:4;1433:27;;:10;:27;;;1425:36;;;;;;1189:279;;;;:::o;3948:197:20:-;4003:6;4021:11;4035:1;4021:15;;4046:72;4058:1;4053;:6;4046:72;;4075:6;;;;;;;4105:1;4101;:5;4095:12;;;;4046:72;;;4134:4;4127:11;;;3948:197;;;:::o;-1:-1:-1:-;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;:::o;7:342:22:-;;109:64;124:48;165:6;124:48;:::i;:::-;109:64;:::i;:::-;100:73;;196:6;189:5;182:21;234:4;227:5;223:16;272:3;263:6;258:3;254:16;251:25;248:2;;;289:1;286;279:12;248:2;302:41;336:6;331:3;326;302:41;:::i;:::-;90:259;;;;;;:::o;355:353::-;;469:65;484:49;526:6;484:49;:::i;:::-;469:65;:::i;:::-;460:74;;557:6;550:5;543:21;595:4;588:5;584:16;633:3;624:6;619:3;615:16;612:25;609:2;;;650:1;647;640:12;609:2;663:39;695:6;690:3;685;663:39;:::i;:::-;450:258;;;;;;:::o;714:139::-;;798:6;785:20;776:29;;814:33;841:5;814:33;:::i;:::-;766:87;;;;:::o;859:137::-;;944:6;938:13;929:22;;960:30;984:5;960:30;:::i;:::-;919:77;;;;:::o;1015:271::-;;1119:3;1112:4;1104:6;1100:17;1096:27;1086:2;;1137:1;1134;1127:12;1086:2;1177:6;1164:20;1202:78;1276:3;1268:6;1261:4;1253:6;1249:17;1202:78;:::i;:::-;1193:87;;1076:210;;;;;:::o;1292:139::-;;1378:6;1372:13;1363:22;;1394:31;1419:5;1394:31;:::i;:::-;1353:78;;;;:::o;1437:137::-;;1520:6;1507:20;1498:29;;1536:32;1562:5;1536:32;:::i;:::-;1488:86;;;;:::o;1580:141::-;;1667:6;1661:13;1652:22;;1683:32;1709:5;1683:32;:::i;:::-;1642:79;;;;:::o;1741:288::-;;1857:3;1850:4;1842:6;1838:17;1834:27;1824:2;;1875:1;1872;1865:12;1824:2;1908:6;1902:13;1933:90;2019:3;2011:6;2004:4;1996:6;1992:17;1933:90;:::i;:::-;1924:99;;1814:215;;;;;:::o;2087:1032::-;;2225:4;2213:9;2208:3;2204:19;2200:30;2197:2;;;2243:1;2240;2233:12;2197:2;2265:20;2280:4;2265:20;:::i;:::-;2256:29;;2347:1;2387:49;2432:3;2423:6;2412:9;2408:22;2387:49;:::i;:::-;2380:4;2373:5;2369:16;2362:75;2295:153;2511:2;2552:49;2597:3;2588:6;2577:9;2573:22;2552:49;:::i;:::-;2545:4;2538:5;2534:16;2527:75;2458:155;2676:2;2717:49;2762:3;2753:6;2742:9;2738:22;2717:49;:::i;:::-;2710:4;2703:5;2699:16;2692:75;2623:155;2836:2;2877:48;2921:3;2912:6;2901:9;2897:22;2877:48;:::i;:::-;2870:4;2863:5;2859:16;2852:74;2788:149;3009:3;3051:49;3096:3;3087:6;3076:9;3072:22;3051:49;:::i;:::-;3044:4;3037:5;3033:16;3026:75;2947:165;2187:932;;;;:::o;3178:1031::-;;3317:4;3305:9;3300:3;3296:19;3292:30;3289:2;;;3335:1;3332;3325:12;3289:2;3357:20;3372:4;3357:20;:::i;:::-;3348:29;;3439:1;3479:49;3524:3;3515:6;3504:9;3500:22;3479:49;:::i;:::-;3472:4;3465:5;3461:16;3454:75;3387:153;3603:2;3644:49;3689:3;3680:6;3669:9;3665:22;3644:49;:::i;:::-;3637:4;3630:5;3626:16;3619:75;3550:155;3766:2;3807:49;3852:3;3843:6;3832:9;3828:22;3807:49;:::i;:::-;3800:4;3793:5;3789:16;3782:75;3715:153;3926:2;3967:48;4011:3;4002:6;3991:9;3987:22;3967:48;:::i;:::-;3960:4;3953:5;3949:16;3942:74;3878:149;4099:3;4141:49;4186:3;4177:6;4166:9;4162:22;4141:49;:::i;:::-;4134:4;4127:5;4123:16;4116:75;4037:165;3279:930;;;;:::o;4215:139::-;;4299:6;4286:20;4277:29;;4315:33;4342:5;4315:33;:::i;:::-;4267:87;;;;:::o;4360:143::-;;4448:6;4442:13;4433:22;;4464:33;4491:5;4464:33;:::i;:::-;4423:80;;;;:::o;4509:141::-;;4596:6;4590:13;4581:22;;4612:32;4638:5;4612:32;:::i;:::-;4571:79;;;;:::o;4656:137::-;;4739:6;4726:20;4717:29;;4755:32;4781:5;4755:32;:::i;:::-;4707:86;;;;:::o;4799:139::-;;4883:6;4870:20;4861:29;;4899:33;4926:5;4899:33;:::i;:::-;4851:87;;;;:::o;4944:143::-;;5032:6;5026:13;5017:22;;5048:33;5075:5;5048:33;:::i;:::-;5007:80;;;;:::o;5093:139::-;;5179:6;5173:13;5164:22;;5195:31;5220:5;5195:31;:::i;:::-;5154:78;;;;:::o;5238:518::-;;;5372:2;5360:9;5351:7;5347:23;5343:32;5340:2;;;5388:1;5385;5378:12;5340:2;5459:1;5448:9;5444:17;5431:31;5489:18;5481:6;5478:30;5475:2;;;5521:1;5518;5511:12;5475:2;5549:62;5603:7;5594:6;5583:9;5579:22;5549:62;:::i;:::-;5539:72;;5402:219;5660:2;5686:53;5731:7;5722:6;5711:9;5707:22;5686:53;:::i;:::-;5676:63;;5631:118;5330:426;;;;;:::o;5762:436::-;;;5896:2;5884:9;5875:7;5871:23;5867:32;5864:2;;;5912:1;5909;5902:12;5864:2;5955:1;5980:63;6035:7;6026:6;6015:9;6011:22;5980:63;:::i;:::-;5970:73;;5926:127;6092:2;6118:63;6173:7;6164:6;6153:9;6149:22;6118:63;:::i;:::-;6108:73;;6063:128;5854:344;;;;;:::o;6204:659::-;;;;6353:2;6341:9;6332:7;6328:23;6324:32;6321:2;;;6369:1;6366;6359:12;6321:2;6412:1;6437:52;6481:7;6472:6;6461:9;6457:22;6437:52;:::i;:::-;6427:62;;6383:116;6538:2;6564:52;6608:7;6599:6;6588:9;6584:22;6564:52;:::i;:::-;6554:62;;6509:117;6693:2;6682:9;6678:18;6665:32;6724:18;6716:6;6713:30;6710:2;;;6756:1;6753;6746:12;6710:2;6784:62;6838:7;6829:6;6818:9;6814:22;6784:62;:::i;:::-;6774:72;;6636:220;6311:552;;;;;:::o;6869:390::-;;6998:2;6986:9;6977:7;6973:23;6969:32;6966:2;;;7014:1;7011;7004:12;6966:2;7078:1;7067:9;7063:17;7057:24;7108:18;7100:6;7097:30;7094:2;;;7140:1;7137;7130:12;7094:2;7168:74;7234:7;7225:6;7214:9;7210:22;7168:74;:::i;:::-;7158:84;;7028:224;6956:303;;;;:::o;7265:353::-;;7418:3;7406:9;7397:7;7393:23;7389:33;7386:2;;;7435:1;7432;7425:12;7386:2;7478:1;7503:98;7593:7;7584:6;7573:9;7569:22;7503:98;:::i;:::-;7493:108;;7449:162;7376:242;;;;:::o;7624:355::-;;7778:3;7766:9;7757:7;7753:23;7749:33;7746:2;;;7795:1;7792;7785:12;7746:2;7838:1;7863:99;7954:7;7945:6;7934:9;7930:22;7863:99;:::i;:::-;7853:109;;7809:163;7736:243;;;;:::o;7985:1204::-;;;;;;;;8196:3;8184:9;8175:7;8171:23;8167:33;8164:2;;;8213:1;8210;8203:12;8164:2;8256:1;8281:64;8337:7;8328:6;8317:9;8313:22;8281:64;:::i;:::-;8271:74;;8227:128;8394:2;8420:62;8474:7;8465:6;8454:9;8450:22;8420:62;:::i;:::-;8410:72;;8365:127;8531:2;8557:63;8612:7;8603:6;8592:9;8588:22;8557:63;:::i;:::-;8547:73;;8502:128;8669:2;8695:63;8750:7;8741:6;8730:9;8726:22;8695:63;:::i;:::-;8685:73;;8640:128;8807:3;8834:63;8889:7;8880:6;8869:9;8865:22;8834:63;:::i;:::-;8824:73;;8778:129;8946:3;8973:62;9027:7;9018:6;9007:9;9003:22;8973:62;:::i;:::-;8963:72;;8917:128;9084:3;9111:61;9164:7;9155:6;9144:9;9140:22;9111:61;:::i;:::-;9101:71;;9055:127;8154:1035;;;;;;;;;;:::o;9195:592::-;;;;9346:2;9334:9;9325:7;9321:23;9317:32;9314:2;;;9362:1;9359;9352:12;9314:2;9405:1;9430:64;9486:7;9477:6;9466:9;9462:22;9430:64;:::i;:::-;9420:74;;9376:128;9543:2;9569:64;9625:7;9616:6;9605:9;9601:22;9569:64;:::i;:::-;9559:74;;9514:129;9682:2;9708:62;9762:7;9753:6;9742:9;9738:22;9708:62;:::i;:::-;9698:72;;9653:127;9304:483;;;;;:::o;9793:179::-;;9883:46;9925:3;9917:6;9883:46;:::i;:::-;9961:4;9956:3;9952:14;9938:28;;9873:99;;;;:::o;9978:175::-;;10066:44;10106:3;10098:6;10066:44;:::i;:::-;10142:4;10137:3;10133:14;10119:28;;10056:97;;;;:::o;10159:118::-;10246:24;10264:5;10246:24;:::i;:::-;10241:3;10234:37;10224:53;;:::o;10283:157::-;10388:45;10408:24;10426:5;10408:24;:::i;:::-;10388:45;:::i;:::-;10383:3;10376:58;10366:74;;:::o;10476:732::-;;10624:54;10672:5;10624:54;:::i;:::-;10694:86;10773:6;10768:3;10694:86;:::i;:::-;10687:93;;10804:56;10854:5;10804:56;:::i;:::-;10883:7;10914:1;10899:284;10924:6;10921:1;10918:13;10899:284;;;11000:6;10994:13;11027:63;11086:3;11071:13;11027:63;:::i;:::-;11020:70;;11113:60;11166:6;11113:60;:::i;:::-;11103:70;;10959:224;10946:1;10943;10939:9;10934:14;;10899:284;;;10903:14;11199:3;11192:10;;10600:608;;;;;;;:::o;11242:724::-;;11388:53;11435:5;11388:53;:::i;:::-;11457:85;11535:6;11530:3;11457:85;:::i;:::-;11450:92;;11566:55;11615:5;11566:55;:::i;:::-;11644:7;11675:1;11660:281;11685:6;11682:1;11679:13;11660:281;;;11761:6;11755:13;11788:61;11845:3;11830:13;11788:61;:::i;:::-;11781:68;;11872:59;11924:6;11872:59;:::i;:::-;11862:69;;11720:221;11707:1;11704;11700:9;11695:14;;11660:281;;;11664:14;11957:3;11950:10;;11364:602;;;;;;;:::o;11972:109::-;12053:21;12068:5;12053:21;:::i;:::-;12048:3;12041:34;12031:50;;:::o;12087:360::-;;12201:38;12233:5;12201:38;:::i;:::-;12255:70;12318:6;12313:3;12255:70;:::i;:::-;12248:77;;12334:52;12379:6;12374:3;12367:4;12360:5;12356:16;12334:52;:::i;:::-;12411:29;12433:6;12411:29;:::i;:::-;12406:3;12402:39;12395:46;;12177:270;;;;;:::o;12453:115::-;12538:23;12555:5;12538:23;:::i;:::-;12533:3;12526:36;12516:52;;:::o;12574:364::-;;12690:39;12723:5;12690:39;:::i;:::-;12745:71;12809:6;12804:3;12745:71;:::i;:::-;12738:78;;12825:52;12870:6;12865:3;12858:4;12851:5;12847:16;12825:52;:::i;:::-;12902:29;12924:6;12902:29;:::i;:::-;12897:3;12893:39;12886:46;;12666:272;;;;;:::o;12944:314::-;;13107:67;13171:2;13166:3;13107:67;:::i;:::-;13100:74;;13204:18;13200:1;13195:3;13191:11;13184:39;13249:2;13244:3;13240:12;13233:19;;13090:168;;;:::o;13264:108::-;13341:24;13359:5;13341:24;:::i;:::-;13336:3;13329:37;13319:53;;:::o;13378:118::-;13465:24;13483:5;13465:24;:::i;:::-;13460:3;13453:37;13443:53;;:::o;13502:153::-;13605:43;13624:23;13641:5;13624:23;:::i;:::-;13605:43;:::i;:::-;13600:3;13593:56;13583:72;;:::o;13661:118::-;13748:24;13766:5;13748:24;:::i;:::-;13743:3;13736:37;13726:53;;:::o;13785:105::-;13860:23;13877:5;13860:23;:::i;:::-;13855:3;13848:36;13838:52;;:::o;13896:115::-;13981:23;13998:5;13981:23;:::i;:::-;13976:3;13969:36;13959:52;;:::o;14017:533::-;;14198:75;14269:3;14260:6;14198:75;:::i;:::-;14298:2;14293:3;14289:12;14282:19;;14311:73;14380:3;14371:6;14311:73;:::i;:::-;14409:1;14404:3;14400:11;14393:18;;14421:75;14492:3;14483:6;14421:75;:::i;:::-;14521:2;14516:3;14512:12;14505:19;;14541:3;14534:10;;14187:363;;;;;;:::o;14556:222::-;;14687:2;14676:9;14672:18;14664:26;;14700:71;14768:1;14757:9;14753:17;14744:6;14700:71;:::i;:::-;14654:124;;;;:::o;14784:735::-;;15037:3;15026:9;15022:19;15014:27;;15051:71;15119:1;15108:9;15104:17;15095:6;15051:71;:::i;:::-;15132:66;15194:2;15183:9;15179:18;15170:6;15132:66;:::i;:::-;15208:70;15274:2;15263:9;15259:18;15250:6;15208:70;:::i;:::-;15288:72;15356:2;15345:9;15341:18;15332:6;15288:72;:::i;:::-;15408:9;15402:4;15398:20;15392:3;15381:9;15377:19;15370:49;15436:76;15507:4;15498:6;15436:76;:::i;:::-;15428:84;;15004:515;;;;;;;;:::o;15525:313::-;;15676:2;15665:9;15661:18;15653:26;;15725:9;15719:4;15715:20;15711:1;15700:9;15696:17;15689:47;15753:78;15826:4;15817:6;15753:78;:::i;:::-;15745:86;;15643:195;;;;:::o;15844:419::-;;16048:2;16037:9;16033:18;16025:26;;16097:9;16091:4;16087:20;16083:1;16072:9;16068:17;16061:47;16125:131;16251:4;16125:131;:::i;:::-;16117:139;;16015:248;;;:::o;16269:851::-;;16582:3;16571:9;16567:19;16559:27;;16596:71;16664:1;16653:9;16649:17;16640:6;16596:71;:::i;:::-;16714:9;16708:4;16704:20;16699:2;16688:9;16684:18;16677:48;16742:108;16845:4;16836:6;16742:108;:::i;:::-;16734:116;;16897:9;16891:4;16887:20;16882:2;16871:9;16867:18;16860:48;16925:106;17026:4;17017:6;16925:106;:::i;:::-;16917:114;;17041:72;17109:2;17098:9;17094:18;17085:6;17041:72;:::i;:::-;16549:571;;;;;;;:::o;17126:549::-;;17339:3;17328:9;17324:19;17316:27;;17353:71;17421:1;17410:9;17406:17;17397:6;17353:71;:::i;:::-;17434:72;17502:2;17491:9;17487:18;17478:6;17434:72;:::i;:::-;17516:70;17582:2;17571:9;17567:18;17558:6;17516:70;:::i;:::-;17596:72;17664:2;17653:9;17649:18;17640:6;17596:72;:::i;:::-;17306:369;;;;;;;:::o;17681:278::-;;17747:2;17741:9;17731:19;;17789:4;17781:6;17777:17;17896:6;17884:10;17881:22;17860:18;17848:10;17845:34;17842:62;17839:2;;;17907:13;;:::i;:::-;17839:2;17942:10;17938:2;17931:22;17721:238;;;;:::o;17965:326::-;;18116:18;18108:6;18105:30;18102:2;;;18138:13;;:::i;:::-;18102:2;18218:4;18214:9;18207:4;18199:6;18195:17;18191:33;18183:41;;18279:4;18273;18269:15;18261:23;;18031:260;;;:::o;18297:327::-;;18449:18;18441:6;18438:30;18435:2;;;18471:13;;:::i;:::-;18435:2;18551:4;18547:9;18540:4;18532:6;18528:17;18524:33;18516:41;;18612:4;18606;18602:15;18594:23;;18364:260;;;:::o;18630:132::-;;18720:3;18712:11;;18750:4;18745:3;18741:14;18733:22;;18702:60;;;:::o;18768:131::-;;18857:3;18849:11;;18887:4;18882:3;18878:14;18870:22;;18839:60;;;:::o;18905:114::-;;19006:5;19000:12;18990:22;;18979:40;;;:::o;19025:113::-;;19125:5;19119:12;19109:22;;19098:40;;;:::o;19144:98::-;;19229:5;19223:12;19213:22;;19202:40;;;:::o;19248:99::-;;19334:5;19328:12;19318:22;;19307:40;;;:::o;19353:113::-;;19455:4;19450:3;19446:14;19438:22;;19428:38;;;:::o;19472:112::-;;19573:4;19568:3;19564:14;19556:22;;19546:38;;;:::o;19590:184::-;;19723:6;19718:3;19711:19;19763:4;19758:3;19754:14;19739:29;;19701:73;;;;:::o;19780:183::-;;19912:6;19907:3;19900:19;19952:4;19947:3;19943:14;19928:29;;19890:73;;;;:::o;19969:168::-;;20086:6;20081:3;20074:19;20126:4;20121:3;20117:14;20102:29;;20064:73;;;;:::o;20143:169::-;;20261:6;20256:3;20249:19;20301:4;20296:3;20292:14;20277:29;;20239:73;;;;:::o;20318:96::-;;20384:24;20402:5;20384:24;:::i;:::-;20373:35;;20363:51;;;:::o;20420:90::-;;20497:5;20490:13;20483:21;20472:32;;20462:48;;;:::o;20516:90::-;;20594:5;20591:1;20580:20;20569:31;;20559:47;;;:::o;20612:76::-;;20677:5;20666:16;;20656:32;;;:::o;20694:89::-;;20770:6;20763:5;20759:18;20748:29;;20738:45;;;:::o;20789:126::-;;20866:42;20859:5;20855:54;20844:65;;20834:81;;;:::o;20921:91::-;;20997:8;20990:5;20986:20;20975:31;;20965:47;;;:::o;21018:77::-;;21084:5;21073:16;;21063:32;;;:::o;21101:93::-;;21177:10;21170:5;21166:22;21155:33;;21145:49;;;:::o;21200:86::-;;21275:4;21268:5;21264:16;21253:27;;21243:43;;;:::o;21292:154::-;21376:6;21371:3;21366;21353:30;21438:1;21429:6;21424:3;21420:16;21413:27;21343:103;;;:::o;21452:307::-;21520:1;21530:113;21544:6;21541:1;21538:13;21530:113;;;21629:1;21624:3;21620:11;21614:18;21610:1;21605:3;21601:11;21594:39;21566:2;21563:1;21559:10;21554:15;;21530:113;;;21661:6;21658:1;21655:13;21652:2;;;21741:1;21732:6;21727:3;21723:16;21716:27;21652:2;21501:258;;;;:::o;21765:100::-;;21833:26;21853:5;21833:26;:::i;:::-;21822:37;;21812:53;;;:::o;21871:94::-;;21939:20;21953:5;21939:20;:::i;:::-;21928:31;;21918:47;;;:::o;21971:94::-;;22038:21;22053:5;22038:21;:::i;:::-;22027:32;;22017:48;;;:::o;22071:::-;22104:9;22125:102;;22217:2;22213:7;22208:2;22201:5;22197:14;22193:28;22183:38;;22173:54;;;:::o;22233:96::-;;22316:5;22311:3;22307:15;22286:36;;22276:53;;;:::o;22335:94::-;;22416:5;22412:2;22408:14;22387:35;;22377:52;;;:::o;22435:122::-;22508:24;22526:5;22508:24;:::i;:::-;22501:5;22498:35;22488:2;;22547:1;22544;22537:12;22488:2;22478:79;:::o;22563:116::-;22633:21;22648:5;22633:21;:::i;:::-;22626:5;22623:32;22613:2;;22669:1;22666;22659:12;22613:2;22603:76;:::o;22685:118::-;22756:22;22772:5;22756:22;:::i;:::-;22749:5;22746:33;22736:2;;22793:1;22790;22783:12;22736:2;22726:77;:::o;22809:120::-;22881:23;22898:5;22881:23;:::i;:::-;22874:5;22871:34;22861:2;;22919:1;22916;22909:12;22861:2;22851:78;:::o;22935:120::-;23007:23;23024:5;23007:23;:::i;:::-;23000:5;22997:34;22987:2;;23045:1;23042;23035:12;22987:2;22977:78;:::o;23061:122::-;23134:24;23152:5;23134:24;:::i;:::-;23127:5;23124:35;23114:2;;23173:1;23170;23163:12;23114:2;23104:79;:::o;23189:120::-;23261:23;23278:5;23261:23;:::i;:::-;23254:5;23251:34;23241:2;;23299:1;23296;23289:12;23241:2;23231:78;:::o;23315:122::-;23388:24;23406:5;23388:24;:::i;:::-;23381:5;23378:35;23368:2;;23427:1;23424;23417:12;23368:2;23358:79;:::o;23443:118::-;23514:22;23530:5;23514:22;:::i;:::-;23507:5;23504:33;23494:2;;23551:1;23548;23541:12;23494:2;23484:77;:::o",
        "linkReferences": {},
        "immutableReferences": {
            "1605": [
                {
                    "start": 1560,
                    "length": 32
                },
                {
                    "start": 2653,
                    "length": 32
                },
                {
                    "start": 3233,
                    "length": 32
                }
            ],
            "1609": [
                {
                    "start": 951,
                    "length": 32
                }
            ]
        }
    },
    "methodIdentifiers": {
        "WETH9()": "4aa4a4fc",
        "factory()": "c45a0155",
        "quoteExactInput(bytes,uint256)": "cdca1753",
        "quoteExactInputSingle((address,address,uint256,uint24,uint160))": "c6a5026a",
        "quoteExactOutput(bytes,uint256)": "2f80bb1d",
        "quoteExactOutputSingle((address,address,uint256,uint24,uint160))": "bd21704a",
        "uniswapV3SwapCallback(int256,int256,bytes)": "fa461e33"
    },
    "rawMetadata": "{\"compiler\":{\"version\":\"0.7.6+commit.7338295f\"},\"language\":\"Solidity\",\"output\":{\"abi\":[{\"inputs\":[{\"internalType\":\"address\",\"name\":\"_factory\",\"type\":\"address\"},{\"internalType\":\"address\",\"name\":\"_WETH9\",\"type\":\"address\"}],\"stateMutability\":\"nonpayable\",\"type\":\"constructor\"},{\"inputs\":[],\"name\":\"WETH9\",\"outputs\":[{\"internalType\":\"address\",\"name\":\"\",\"type\":\"address\"}],\"stateMutability\":\"view\",\"type\":\"function\"},{\"inputs\":[],\"name\":\"factory\",\"outputs\":[{\"internalType\":\"address\",\"name\":\"\",\"type\":\"address\"}],\"stateMutability\":\"view\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"bytes\",\"name\":\"path\",\"type\":\"bytes\"},{\"internalType\":\"uint256\",\"name\":\"amountIn\",\"type\":\"uint256\"}],\"name\":\"quoteExactInput\",\"outputs\":[{\"internalType\":\"uint256\",\"name\":\"amountOut\",\"type\":\"uint256\"},{\"internalType\":\"uint160[]\",\"name\":\"sqrtPriceX96AfterList\",\"type\":\"uint160[]\"},{\"internalType\":\"uint32[]\",\"name\":\"initializedTicksCrossedList\",\"type\":\"uint32[]\"},{\"internalType\":\"uint256\",\"name\":\"gasEstimate\",\"type\":\"uint256\"}],\"stateMutability\":\"nonpayable\",\"type\":\"function\"},{\"inputs\":[{\"components\":[{\"internalType\":\"address\",\"name\":\"tokenIn\",\"type\":\"address\"},{\"internalType\":\"address\",\"name\":\"tokenOut\",\"type\":\"address\"},{\"internalType\":\"uint256\",\"name\":\"amountIn\",\"type\":\"uint256\"},{\"internalType\":\"uint24\",\"name\":\"fee\",\"type\":\"uint24\"},{\"internalType\":\"uint160\",\"name\":\"sqrtPriceLimitX96\",\"type\":\"uint160\"}],\"internalType\":\"struct IQuoterV2.QuoteExactInputSingleParams\",\"name\":\"params\",\"type\":\"tuple\"}],\"name\":\"quoteExactInputSingle\",\"outputs\":[{\"internalType\":\"uint256\",\"name\":\"amountOut\",\"type\":\"uint256\"},{\"internalType\":\"uint160\",\"name\":\"sqrtPriceX96After\",\"type\":\"uint160\"},{\"internalType\":\"uint32\",\"name\":\"initializedTicksCrossed\",\"type\":\"uint32\"},{\"internalType\":\"uint256\",\"name\":\"gasEstimate\",\"type\":\"uint256\"}],\"stateMutability\":\"nonpayable\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"bytes\",\"name\":\"path\",\"type\":\"bytes\"},{\"internalType\":\"uint256\",\"name\":\"amountOut\",\"type\":\"uint256\"}],\"name\":\"quoteExactOutput\",\"outputs\":[{\"internalType\":\"uint256\",\"name\":\"amountIn\",\"type\":\"uint256\"},{\"internalType\":\"uint160[]\",\"name\":\"sqrtPriceX96AfterList\",\"type\":\"uint160[]\"},{\"internalType\":\"uint32[]\",\"name\":\"initializedTicksCrossedList\",\"type\":\"uint32[]\"},{\"internalType\":\"uint256\",\"name\":\"gasEstimate\",\"type\":\"uint256\"}],\"stateMutability\":\"nonpayable\",\"type\":\"function\"},{\"inputs\":[{\"components\":[{\"internalType\":\"address\",\"name\":\"tokenIn\",\"type\":\"address\"},{\"internalType\":\"address\",\"name\":\"tokenOut\",\"type\":\"address\"},{\"internalType\":\"uint256\",\"name\":\"amount\",\"type\":\"uint256\"},{\"internalType\":\"uint24\",\"name\":\"fee\",\"type\":\"uint24\"},{\"internalType\":\"uint160\",\"name\":\"sqrtPriceLimitX96\",\"type\":\"uint160\"}],\"internalType\":\"struct IQuoterV2.QuoteExactOutputSingleParams\",\"name\":\"params\",\"type\":\"tuple\"}],\"name\":\"quoteExactOutputSingle\",\"outputs\":[{\"internalType\":\"uint256\",\"name\":\"amountIn\",\"type\":\"uint256\"},{\"internalType\":\"uint160\",\"name\":\"sqrtPriceX96After\",\"type\":\"uint160\"},{\"internalType\":\"uint32\",\"name\":\"initializedTicksCrossed\",\"type\":\"uint32\"},{\"internalType\":\"uint256\",\"name\":\"gasEstimate\",\"type\":\"uint256\"}],\"stateMutability\":\"nonpayable\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"int256\",\"name\":\"amount0Delta\",\"type\":\"int256\"},{\"internalType\":\"int256\",\"name\":\"amount1Delta\",\"type\":\"int256\"},{\"internalType\":\"bytes\",\"name\":\"path\",\"type\":\"bytes\"}],\"name\":\"uniswapV3SwapCallback\",\"outputs\":[],\"stateMutability\":\"view\",\"type\":\"function\"}],\"devdoc\":{\"details\":\"These functions are not gas efficient and should _not_ be called on chain. Instead, optimistically execute the swap and check the amounts in the callback.\",\"kind\":\"dev\",\"methods\":{\"quoteExactInput(bytes,uint256)\":{\"params\":{\"amountIn\":\"The amount of the first token to swap\",\"path\":\"The path of the swap, i.e. each token pair and the pool fee\"},\"returns\":{\"amountOut\":\"The amount of the last token that would be received\",\"gasEstimate\":\"The estimate of the gas that the swap consumes\",\"initializedTicksCrossedList\":\"List of the initialized ticks that the swap crossed for each pool in the path\",\"sqrtPriceX96AfterList\":\"List of the sqrt price after the swap for each pool in the path\"}},\"quoteExactInputSingle((address,address,uint256,uint24,uint160))\":{\"params\":{\"params\":\"The params for the quote, encoded as `QuoteExactInputSingleParams` tokenIn The token being swapped in tokenOut The token being swapped out fee The fee of the token pool to consider for the pair amountIn The desired input amount sqrtPriceLimitX96 The price limit of the pool that cannot be exceeded by the swap\"},\"returns\":{\"amountOut\":\"The amount of `tokenOut` that would be received\",\"gasEstimate\":\"The estimate of the gas that the swap consumes\",\"initializedTicksCrossed\":\"The number of initialized ticks that the swap crossed\",\"sqrtPriceX96After\":\"The sqrt price of the pool after the swap\"}},\"quoteExactOutput(bytes,uint256)\":{\"params\":{\"amountOut\":\"The amount of the last token to receive\",\"path\":\"The path of the swap, i.e. each token pair and the pool fee. Path must be provided in reverse order\"},\"returns\":{\"amountIn\":\"The amount of first token required to be paid\",\"gasEstimate\":\"The estimate of the gas that the swap consumes\",\"initializedTicksCrossedList\":\"List of the initialized ticks that the swap crossed for each pool in the path\",\"sqrtPriceX96AfterList\":\"List of the sqrt price after the swap for each pool in the path\"}},\"quoteExactOutputSingle((address,address,uint256,uint24,uint160))\":{\"params\":{\"params\":\"The params for the quote, encoded as `QuoteExactOutputSingleParams` tokenIn The token being swapped in tokenOut The token being swapped out fee The fee of the token pool to consider for the pair amountOut The desired output amount sqrtPriceLimitX96 The price limit of the pool that cannot be exceeded by the swap\"},\"returns\":{\"amountIn\":\"The amount required as the input for the swap in order to receive `amountOut`\",\"gasEstimate\":\"The estimate of the gas that the swap consumes\",\"initializedTicksCrossed\":\"The number of initialized ticks that the swap crossed\",\"sqrtPriceX96After\":\"The sqrt price of the pool after the swap\"}},\"uniswapV3SwapCallback(int256,int256,bytes)\":{\"details\":\"In the implementation you must pay the pool tokens owed for the swap. The caller of this method must be checked to be a UniswapV3Pool deployed by the canonical UniswapV3Factory. amount0Delta and amount1Delta can both be 0 if no tokens were swapped.\",\"params\":{\"amount0Delta\":\"The amount of token0 that was sent (negative) or must be received (positive) by the pool by the end of the swap. If positive, the callback must send that amount of token0 to the pool.\",\"amount1Delta\":\"The amount of token1 that was sent (negative) or must be received (positive) by the pool by the end of the swap. If positive, the callback must send that amount of token1 to the pool.\",\"data\":\"Any data passed through by the caller via the IUniswapV3PoolActions#swap call\"}}},\"stateVariables\":{\"amountOutCached\":{\"details\":\"Transient storage variable used to check a safety condition in exact output swaps.\"}},\"title\":\"Provides quotes for swaps\",\"version\":1},\"userdoc\":{\"kind\":\"user\",\"methods\":{\"quoteExactInput(bytes,uint256)\":{\"notice\":\"Returns the amount out received for a given exact input swap without executing the swap\"},\"quoteExactInputSingle((address,address,uint256,uint24,uint160))\":{\"notice\":\"Returns the amount out received for a given exact input but for a swap of a single pool\"},\"quoteExactOutput(bytes,uint256)\":{\"notice\":\"Returns the amount in required for a given exact output swap without executing the swap\"},\"quoteExactOutputSingle((address,address,uint256,uint24,uint160))\":{\"notice\":\"Returns the amount in required to receive the given exact output amount but for a swap of a single pool\"},\"uniswapV3SwapCallback(int256,int256,bytes)\":{\"notice\":\"Called to `msg.sender` after executing a swap via IUniswapV3Pool#swap.\"}},\"notice\":\"Allows getting the expected amount out or amount in for a given swap without executing the swap\",\"version\":1}},\"settings\":{\"compilationTarget\":{\"lib/v3-periphery/contracts/lens/QuoterV2.sol\":\"QuoterV2\"},\"evmVersion\":\"istanbul\",\"libraries\":{},\"metadata\":{\"bytecodeHash\":\"ipfs\"},\"optimizer\":{\"enabled\":false,\"runs\":200},\"remappings\":[\":@bytes-utils/=node_modules/solidity-bytes-utils/\",\":@chainlink/contracts-ccip/=lib/chainlink-local/lib/ccip/contracts/\",\":@chainlink/contracts/=lib/chainlink/contracts/\",\":@chainlink/local/src/=lib/chainlink-local/src/\",\":@openzeppelin/contracts/=lib/openzeppelin-contracts/contracts/\",\":@uni-router-v3/contracts/=lib/swap-router-contracts/contracts/\",\":@uniV3-periphery/contracts/=lib/v3-periphery/contracts/\",\":@uniswap/v3-core/contracts/=lib/v3-core/contracts/\",\":ccip/=lib/chainlink-local/lib/ccip/\",\":chainlink-brownie-contracts/=lib/chainlink-local/lib/chainlink-brownie-contracts/contracts/src/v0.6/vendor/@arbitrum/nitro-contracts/src/\",\":chainlink-local/=lib/chainlink-local/src/\",\":chainlink/=lib/chainlink/\",\":ds-test/=lib/chainlink-local/lib/forge-std/lib/ds-test/src/\",\":erc4626-tests/=lib/openzeppelin-contracts/lib/erc4626-tests/\",\":forge-std/=lib/forge-std/src/\",\":halmos-cheatcodes/=lib/openzeppelin-contracts/lib/halmos-cheatcodes/src/\",\":openzeppelin-contracts/=lib/openzeppelin-contracts/\",\":swap-router-contracts/=lib/swap-router-contracts/contracts/\",\":v3-core/=lib/v3-core/\",\":v3-periphery/=lib/v3-periphery/contracts/\"]},\"sources\":{\"lib/v3-core/contracts/interfaces/IUniswapV3Pool.sol\":{\"keccak256\":\"0xfe6113d518466cd6652c85b111e01f33eb62157f49ae5ed7d5a3947a2044adb1\",\"license\":\"GPL-2.0-or-later\",\"urls\":[\"bzz-raw://1c42b9e6f5902ac38dd43e25750939baa7e0c1425dc75afd717c4412731065d5\",\"dweb:/ipfs/QmWaoacnzsucTvBME2o7YgZBZMhaHv7fkj83htHMVWJKWh\"]},\"lib/v3-core/contracts/interfaces/callback/IUniswapV3SwapCallback.sol\":{\"keccak256\":\"0x3f485fb1a44e8fbeadefb5da07d66edab3cfe809f0ac4074b1e54e3eb3c4cf69\",\"license\":\"GPL-2.0-or-later\",\"urls\":[\"bzz-raw://095ce0626b41318c772b3ebf19d548282607f6a8f3d6c41c13edfbd5370c8652\",\"dweb:/ipfs/QmVDZfJJ89UUCE1hMyzqpkZAtQ8jUsBgZNE5AMRG7RzRFS\"]},\"lib/v3-core/contracts/interfaces/pool/IUniswapV3PoolActions.sol\":{\"keccak256\":\"0x9453dd0e7442188667d01d9b65de3f1e14e9511ff3e303179a15f6fc267f7634\",\"license\":\"GPL-2.0-or-later\",\"urls\":[\"bzz-raw://982f4328f956c3e60e67501e759eb292ac487f76460c774c50e9ae4fcc92aae5\",\"dweb:/ipfs/QmRnzEDsaqtd9PJEVcgQi7p5aV5pMSvRUoGZJAdwFUJxgZ\"]},\"lib/v3-core/contracts/interfaces/pool/IUniswapV3PoolDerivedState.sol\":{\"keccak256\":\"0xe603ac5b17ecdee73ba2b27efdf386c257a19c14206e87eee77e2017b742d9e5\",\"license\":\"GPL-2.0-or-later\",\"urls\":[\"bzz-raw://8febc9bdb399a4d94bb89f5377732652e2400e4a8dee808201ade6848f9004e7\",\"dweb:/ipfs/QmaKDqYYFU4d2W2iN77aDHptfbFmYZRrMYXHeGpJmM8C1c\"]},\"lib/v3-core/contracts/interfaces/pool/IUniswapV3PoolEvents.sol\":{\"keccak256\":\"0x8071514d0fe5d17d6fbd31c191cdfb703031c24e0ece3621d88ab10e871375cd\",\"license\":\"GPL-2.0-or-later\",\"urls\":[\"bzz-raw://d0b571930cc7488b1d546a7e9cea7c52d8b3c4e207da657ed0e0db7343b8cd03\",\"dweb:/ipfs/QmaGK6vVwB95QSTR1XMYvrh7ivYAYZxi3fD7v6VMA4jZ39\"]},\"lib/v3-core/contracts/interfaces/pool/IUniswapV3PoolImmutables.sol\":{\"keccak256\":\"0xf6e5d2cd1139c4c276bdbc8e1d2b256e456c866a91f1b868da265c6d2685c3f7\",\"license\":\"GPL-2.0-or-later\",\"urls\":[\"bzz-raw://b99c8c9ae8e27ee6559e5866bea82cbc9ffc8247f8d15b7422a4deb287d4d047\",\"dweb:/ipfs/QmfL8gaqt3ffAnm6nVj5ksuNpLygXuL3xq5VBqrkwC2JJ3\"]},\"lib/v3-core/contracts/interfaces/pool/IUniswapV3PoolOwnerActions.sol\":{\"keccak256\":\"0x759b78a2918af9e99e246dc3af084f654e48ef32bb4e4cb8a966aa3dcaece235\",\"license\":\"GPL-2.0-or-later\",\"urls\":[\"bzz-raw://64144fb96e1c7fdba87305acadb98a198d26a3d46c097cb3a666e567f6f29735\",\"dweb:/ipfs/QmUnWVwN9FKB9uV5Pr8YfLpWZnYM2DENnRMaadZ492JS9u\"]},\"lib/v3-core/contracts/interfaces/pool/IUniswapV3PoolState.sol\":{\"keccak256\":\"0x852dc1f5df7dcf7f11e7bb3eed79f0cea72ad4b25f6a9d2c35aafb48925fd49f\",\"license\":\"GPL-2.0-or-later\",\"urls\":[\"bzz-raw://ed63907c38ff36b0e22bc9ffc53e791ea74f0d4f0e7c257fdfb5aaf8825b1f0f\",\"dweb:/ipfs/QmSQrckghEjs6HVsA5GVgpNpZWvTXMY5eQLF7cN6deFeEg\"]},\"lib/v3-core/contracts/libraries/BitMath.sol\":{\"keccak256\":\"0x82e425066110aac05ed8a9fc90f9ee85142b6f434769447e49d4438a8d9fcd82\",\"license\":\"GPL-2.0-or-later\",\"urls\":[\"bzz-raw://77a97078bc992c18c59cb61e07fa4632c8a26b6babf00f3b16eabb5dcaa953b4\",\"dweb:/ipfs/QmTj15ufLWk6AxedSVXBcLp5cYf2DCJAeDi94cVemCkm54\"]},\"lib/v3-core/contracts/libraries/SafeCast.sol\":{\"keccak256\":\"0x4c12bf820c0b011f5490a209960ca34dd8af34660ef9e01de0438393d15e3fd8\",\"license\":\"GPL-2.0-or-later\",\"urls\":[\"bzz-raw://fed11489e218e55d087d42b4f350a30e10cd2aedec8f432bd3cc712f648d5869\",\"dweb:/ipfs/QmWfRnRxyXwHUDcTQPazxYYk5jxErGeQqdvnYtyg5nBPbU\"]},\"lib/v3-core/contracts/libraries/TickBitmap.sol\":{\"keccak256\":\"0x2035bacd76333baa4ef2bbd6423561638e1b7e97cb19be5b4d61feeea3340364\",\"license\":\"BUSL-1.1\",\"urls\":[\"bzz-raw://55da2e8d44c094b9aa1a40577f9ff32605516ae45ad54e799ec9d570d007a206\",\"dweb:/ipfs/QmakgjThKgfBTaj6Vvf54oKkxeHqgxKFmyiVbcjstsGDBF\"]},\"lib/v3-core/contracts/libraries/TickMath.sol\":{\"keccak256\":\"0x1f864a2bf61ba05f3173eaf2e3f94c5e1da4bec0554757527b6d1ef1fe439e4e\",\"license\":\"GPL-2.0-or-later\",\"urls\":[\"bzz-raw://5139b586df546a9d1c46804ca400b1cb9ce87236eaf212ebd64edee6747a172a\",\"dweb:/ipfs/QmVa2kcRw3VyuB6j1EVWXACKnkbQZgfXYXNi5voq3XkYG8\"]},\"lib/v3-periphery/contracts/base/PeripheryImmutableState.sol\":{\"keccak256\":\"0xd43c2355a7d5659b1fa1fb322647f760722d73a6a5e62ede53d426f3b406b795\",\"license\":\"GPL-2.0-or-later\",\"urls\":[\"bzz-raw://657920576878ca936157383782a97b74166c303a3932c0d72eac3a2d057c3a96\",\"dweb:/ipfs/Qma71Ska1ZbPBnYpeE5S2EAeEtwGfHEMHo3SnDwY1fVmm5\"]},\"lib/v3-periphery/contracts/interfaces/IPeripheryImmutableState.sol\":{\"keccak256\":\"0x7affcfeb5127c0925a71d6a65345e117c33537523aeca7bc98085ead8452519d\",\"license\":\"GPL-2.0-or-later\",\"urls\":[\"bzz-raw://e16b291294210e71cb0f20cd0afe62ae2dc6878d627f5ccc19c4dc9cd80aec3f\",\"dweb:/ipfs/QmQGitSyBr26nour81BZmpmDMyJpvZRqHQZvnCD1Acb127\"]},\"lib/v3-periphery/contracts/interfaces/IQuoterV2.sol\":{\"keccak256\":\"0x7e931f0cd34811851031c4f1318f59b4a4b427a2d2e2968b8e5ed87a9f7f89d6\",\"license\":\"GPL-2.0-or-later\",\"urls\":[\"bzz-raw://63a8d7dcdd081004356b39e1b8e19ee56b02b3abd3e4165781bde1a100a35bed\",\"dweb:/ipfs/QmdfpYkMxoaeEd646aSioLZcPodnCnpZy9Ny4j98uAba2J\"]},\"lib/v3-periphery/contracts/lens/QuoterV2.sol\":{\"keccak256\":\"0x4498d65850fa2954aabf326bc61fdd5801b25e6f1af4766d77b8610105a9d621\",\"license\":\"GPL-2.0-or-later\",\"urls\":[\"bzz-raw://6642216c5a36919ef38eb6e7457a48ac7bb1b5caee87276f14608bc2f602edf0\",\"dweb:/ipfs/QmSPLBzwzSgcv2sY4g9yRYKTdjnjSqrZy6MfS7yu7mVbo8\"]},\"lib/v3-periphery/contracts/libraries/BytesLib.sol\":{\"keccak256\":\"0x68629e5b1a30b6490c6ae721c28117f6f963745462b007da0769758eb67f10d4\",\"license\":\"GPL-2.0-or-later\",\"urls\":[\"bzz-raw://370e31ceab1a7504f98dec122f65d9b8c6fc6420fd8cdd171b3dd57c4d5d21fc\",\"dweb:/ipfs/QmcquKATbnopgs92RdM5bKewt7GdCpgGhVY4hxmv1KjnnH\"]},\"lib/v3-periphery/contracts/libraries/CallbackValidation.sol\":{\"keccak256\":\"0x490c80ca7f4a0ee0514041ddec0867e8a52b24febf1670991797af8fed9f3eec\",\"license\":\"GPL-2.0-or-later\",\"urls\":[\"bzz-raw://f775ba8ad52041a351fbd7000801266d5a10be2f1a53d13c6c9862b2baa935bd\",\"dweb:/ipfs/Qmcaxyr6VutZeaymeBNVcZrBVAHhyJ11sjhWpgj2GX6D5K\"]},\"lib/v3-periphery/contracts/libraries/Path.sol\":{\"keccak256\":\"0xb22c562b5175d50dbcc2224325666090d985f052abdcfe275c8dfc884e34de61\",\"license\":\"GPL-2.0-or-later\",\"urls\":[\"bzz-raw://27aeff27314476ab3c77313ae1f0c5b2442b86315f5ce741cb2150a87c3cbad3\",\"dweb:/ipfs/QmQNno2g1CJvjnH6ych4LuHr1UZDEZPACgYG4XvivxGrqV\"]},\"lib/v3-periphery/contracts/libraries/PoolAddress.sol\":{\"keccak256\":\"0x5edd84eb8ba7c12fd8cb6cffe52e1e9f3f6464514ee5f539c2283826209035a2\",\"license\":\"GPL-2.0-or-later\",\"urls\":[\"bzz-raw://f375d0e6d5ea3674e1aa6f112b021e9a86721a6a2f3cb22d673378b30cf0e840\",\"dweb:/ipfs/QmWJir2qnJyp963mU6U3jEEx9i3H3V5BgKawAfSnG1pC8w\"]},\"lib/v3-periphery/contracts/libraries/PoolTicksCounter.sol\":{\"keccak256\":\"0x45df43e95351dc152cecc0c4aaa9303f322434cd4c3981464879f55b75462220\",\"license\":\"GPL-2.0-or-later\",\"urls\":[\"bzz-raw://855519ed3cd5f22b4b05f7f715414828bdca8d7e25ea71b4cde47a9694a8d754\",\"dweb:/ipfs/QmWpngV7EQkBSMi1JYwpLWBZLGfMTESCRypnmmhPqwksRA\"]}},\"version\":1}",
    "metadata": {
        "compiler": {
            "version": "0.7.6+commit.7338295f"
        },
        "language": "Solidity",
        "output": {
            "abi": [
                {
                    "inputs": [
                        {
                            "internalType": "address",
                            "name": "_factory",
                            "type": "address"
                        },
                        {
                            "internalType": "address",
                            "name": "_WETH9",
                            "type": "address"
                        }
                    ],
                    "stateMutability": "nonpayable",
                    "type": "constructor"
                },
                {
                    "inputs": [],
                    "stateMutability": "view",
                    "type": "function",
                    "name": "WETH9",
                    "outputs": [
                        {
                            "internalType": "address",
                            "name": "",
                            "type": "address"
                        }
                    ]
                },
                {
                    "inputs": [],
                    "stateMutability": "view",
                    "type": "function",
                    "name": "factory",
                    "outputs": [
                        {
                            "internalType": "address",
                            "name": "",
                            "type": "address"
                        }
                    ]
                },
                {
                    "inputs": [
                        {
                            "internalType": "bytes",
                            "name": "path",
                            "type": "bytes"
                        },
                        {
                            "internalType": "uint256",
                            "name": "amountIn",
                            "type": "uint256"
                        }
                    ],
                    "stateMutability": "nonpayable",
                    "type": "function",
                    "name": "quoteExactInput",
                    "outputs": [
                        {
                            "internalType": "uint256",
                            "name": "amountOut",
                            "type": "uint256"
                        },
                        {
                            "internalType": "uint160[]",
                            "name": "sqrtPriceX96AfterList",
                            "type": "uint160[]"
                        },
                        {
                            "internalType": "uint32[]",
                            "name": "initializedTicksCrossedList",
                            "type": "uint32[]"
                        },
                        {
                            "internalType": "uint256",
                            "name": "gasEstimate",
                            "type": "uint256"
                        }
                    ]
                },
                {
                    "inputs": [
                        {
                            "internalType": "struct IQuoterV2.QuoteExactInputSingleParams",
                            "name": "params",
                            "type": "tuple",
                            "components": [
                                {
                                    "internalType": "address",
                                    "name": "tokenIn",
                                    "type": "address"
                                },
                                {
                                    "internalType": "address",
                                    "name": "tokenOut",
                                    "type": "address"
                                },
                                {
                                    "internalType": "uint256",
                                    "name": "amountIn",
                                    "type": "uint256"
                                },
                                {
                                    "internalType": "uint24",
                                    "name": "fee",
                                    "type": "uint24"
                                },
                                {
                                    "internalType": "uint160",
                                    "name": "sqrtPriceLimitX96",
                                    "type": "uint160"
                                }
                            ]
                        }
                    ],
                    "stateMutability": "nonpayable",
                    "type": "function",
                    "name": "quoteExactInputSingle",
                    "outputs": [
                        {
                            "internalType": "uint256",
                            "name": "amountOut",
                            "type": "uint256"
                        },
                        {
                            "internalType": "uint160",
                            "name": "sqrtPriceX96After",
                            "type": "uint160"
                        },
                        {
                            "internalType": "uint32",
                            "name": "initializedTicksCrossed",
                            "type": "uint32"
                        },
                        {
                            "internalType": "uint256",
                            "name": "gasEstimate",
                            "type": "uint256"
                        }
                    ]
                },
                {
                    "inputs": [
                        {
                            "internalType": "bytes",
                            "name": "path",
                            "type": "bytes"
                        },
                        {
                            "internalType": "uint256",
                            "name": "amountOut",
                            "type": "uint256"
                        }
                    ],
                    "stateMutability": "nonpayable",
                    "type": "function",
                    "name": "quoteExactOutput",
                    "outputs": [
                        {
                            "internalType": "uint256",
                            "name": "amountIn",
                            "type": "uint256"
                        },
                        {
                            "internalType": "uint160[]",
                            "name": "sqrtPriceX96AfterList",
                            "type": "uint160[]"
                        },
                        {
                            "internalType": "uint32[]",
                            "name": "initializedTicksCrossedList",
                            "type": "uint32[]"
                        },
                        {
                            "internalType": "uint256",
                            "name": "gasEstimate",
                            "type": "uint256"
                        }
                    ]
                },
                {
                    "inputs": [
                        {
                            "internalType": "struct IQuoterV2.QuoteExactOutputSingleParams",
                            "name": "params",
                            "type": "tuple",
                            "components": [
                                {
                                    "internalType": "address",
                                    "name": "tokenIn",
                                    "type": "address"
                                },
                                {
                                    "internalType": "address",
                                    "name": "tokenOut",
                                    "type": "address"
                                },
                                {
                                    "internalType": "uint256",
                                    "name": "amount",
                                    "type": "uint256"
                                },
                                {
                                    "internalType": "uint24",
                                    "name": "fee",
                                    "type": "uint24"
                                },
                                {
                                    "internalType": "uint160",
                                    "name": "sqrtPriceLimitX96",
                                    "type": "uint160"
                                }
                            ]
                        }
                    ],
                    "stateMutability": "nonpayable",
                    "type": "function",
                    "name": "quoteExactOutputSingle",
                    "outputs": [
                        {
                            "internalType": "uint256",
                            "name": "amountIn",
                            "type": "uint256"
                        },
                        {
                            "internalType": "uint160",
                            "name": "sqrtPriceX96After",
                            "type": "uint160"
                        },
                        {
                            "internalType": "uint32",
                            "name": "initializedTicksCrossed",
                            "type": "uint32"
                        },
                        {
                            "internalType": "uint256",
                            "name": "gasEstimate",
                            "type": "uint256"
                        }
                    ]
                },
                {
                    "inputs": [
                        {
                            "internalType": "int256",
                            "name": "amount0Delta",
                            "type": "int256"
                        },
                        {
                            "internalType": "int256",
                            "name": "amount1Delta",
                            "type": "int256"
                        },
                        {
                            "internalType": "bytes",
                            "name": "path",
                            "type": "bytes"
                        }
                    ],
                    "stateMutability": "view",
                    "type": "function",
                    "name": "uniswapV3SwapCallback"
                }
            ],
            "devdoc": {
                "kind": "dev",
                "methods": {
                    "quoteExactInput(bytes,uint256)": {
                        "params": {
                            "amountIn": "The amount of the first token to swap",
                            "path": "The path of the swap, i.e. each token pair and the pool fee"
                        },
                        "returns": {
                            "amountOut": "The amount of the last token that would be received",
                            "gasEstimate": "The estimate of the gas that the swap consumes",
                            "initializedTicksCrossedList": "List of the initialized ticks that the swap crossed for each pool in the path",
                            "sqrtPriceX96AfterList": "List of the sqrt price after the swap for each pool in the path"
                        }
                    },
                    "quoteExactInputSingle((address,address,uint256,uint24,uint160))": {
                        "params": {
                            "params": "The params for the quote, encoded as `QuoteExactInputSingleParams` tokenIn The token being swapped in tokenOut The token being swapped out fee The fee of the token pool to consider for the pair amountIn The desired input amount sqrtPriceLimitX96 The price limit of the pool that cannot be exceeded by the swap"
                        },
                        "returns": {
                            "amountOut": "The amount of `tokenOut` that would be received",
                            "gasEstimate": "The estimate of the gas that the swap consumes",
                            "initializedTicksCrossed": "The number of initialized ticks that the swap crossed",
                            "sqrtPriceX96After": "The sqrt price of the pool after the swap"
                        }
                    },
                    "quoteExactOutput(bytes,uint256)": {
                        "params": {
                            "amountOut": "The amount of the last token to receive",
                            "path": "The path of the swap, i.e. each token pair and the pool fee. Path must be provided in reverse order"
                        },
                        "returns": {
                            "amountIn": "The amount of first token required to be paid",
                            "gasEstimate": "The estimate of the gas that the swap consumes",
                            "initializedTicksCrossedList": "List of the initialized ticks that the swap crossed for each pool in the path",
                            "sqrtPriceX96AfterList": "List of the sqrt price after the swap for each pool in the path"
                        }
                    },
                    "quoteExactOutputSingle((address,address,uint256,uint24,uint160))": {
                        "params": {
                            "params": "The params for the quote, encoded as `QuoteExactOutputSingleParams` tokenIn The token being swapped in tokenOut The token being swapped out fee The fee of the token pool to consider for the pair amountOut The desired output amount sqrtPriceLimitX96 The price limit of the pool that cannot be exceeded by the swap"
                        },
                        "returns": {
                            "amountIn": "The amount required as the input for the swap in order to receive `amountOut`",
                            "gasEstimate": "The estimate of the gas that the swap consumes",
                            "initializedTicksCrossed": "The number of initialized ticks that the swap crossed",
                            "sqrtPriceX96After": "The sqrt price of the pool after the swap"
                        }
                    },
                    "uniswapV3SwapCallback(int256,int256,bytes)": {
                        "details": "In the implementation you must pay the pool tokens owed for the swap. The caller of this method must be checked to be a UniswapV3Pool deployed by the canonical UniswapV3Factory. amount0Delta and amount1Delta can both be 0 if no tokens were swapped.",
                        "params": {
                            "amount0Delta": "The amount of token0 that was sent (negative) or must be received (positive) by the pool by the end of the swap. If positive, the callback must send that amount of token0 to the pool.",
                            "amount1Delta": "The amount of token1 that was sent (negative) or must be received (positive) by the pool by the end of the swap. If positive, the callback must send that amount of token1 to the pool.",
                            "data": "Any data passed through by the caller via the IUniswapV3PoolActions#swap call"
                        }
                    }
                },
                "version": 1
            },
            "userdoc": {
                "kind": "user",
                "methods": {
                    "quoteExactInput(bytes,uint256)": {
                        "notice": "Returns the amount out received for a given exact input swap without executing the swap"
                    },
                    "quoteExactInputSingle((address,address,uint256,uint24,uint160))": {
                        "notice": "Returns the amount out received for a given exact input but for a swap of a single pool"
                    },
                    "quoteExactOutput(bytes,uint256)": {
                        "notice": "Returns the amount in required for a given exact output swap without executing the swap"
                    },
                    "quoteExactOutputSingle((address,address,uint256,uint24,uint160))": {
                        "notice": "Returns the amount in required to receive the given exact output amount but for a swap of a single pool"
                    },
                    "uniswapV3SwapCallback(int256,int256,bytes)": {
                        "notice": "Called to `msg.sender` after executing a swap via IUniswapV3Pool#swap."
                    }
                },
                "version": 1
            }
        },
        "settings": {
            "remappings": [
                "@bytes-utils/=node_modules/solidity-bytes-utils/",
                "@chainlink/contracts-ccip/=lib/chainlink-local/lib/ccip/contracts/",
                "@chainlink/contracts/=lib/chainlink/contracts/",
                "@chainlink/local/src/=lib/chainlink-local/src/",
                "@openzeppelin/contracts/=lib/openzeppelin-contracts/contracts/",
                "@uni-router-v3/contracts/=lib/swap-router-contracts/contracts/",
                "@uniV3-periphery/contracts/=lib/v3-periphery/contracts/",
                "@uniswap/v3-core/contracts/=lib/v3-core/contracts/",
                "ccip/=lib/chainlink-local/lib/ccip/",
                "chainlink-brownie-contracts/=lib/chainlink-local/lib/chainlink-brownie-contracts/contracts/src/v0.6/vendor/@arbitrum/nitro-contracts/src/",
                "chainlink-local/=lib/chainlink-local/src/",
                "chainlink/=lib/chainlink/",
                "ds-test/=lib/chainlink-local/lib/forge-std/lib/ds-test/src/",
                "erc4626-tests/=lib/openzeppelin-contracts/lib/erc4626-tests/",
                "forge-std/=lib/forge-std/src/",
                "halmos-cheatcodes/=lib/openzeppelin-contracts/lib/halmos-cheatcodes/src/",
                "openzeppelin-contracts/=lib/openzeppelin-contracts/",
                "swap-router-contracts/=lib/swap-router-contracts/contracts/",
                "v3-core/=lib/v3-core/",
                "v3-periphery/=lib/v3-periphery/contracts/"
            ],
            "optimizer": {
                "enabled": false,
                "runs": 200
            },
            "metadata": {
                "bytecodeHash": "ipfs"
            },
            "compilationTarget": {
                "lib/v3-periphery/contracts/lens/QuoterV2.sol": "QuoterV2"
            },
            "evmVersion": "istanbul",
            "libraries": {}
        },
        "sources": {
            "lib/v3-core/contracts/interfaces/IUniswapV3Pool.sol": {
                "keccak256": "0xfe6113d518466cd6652c85b111e01f33eb62157f49ae5ed7d5a3947a2044adb1",
                "urls": [
                    "bzz-raw://1c42b9e6f5902ac38dd43e25750939baa7e0c1425dc75afd717c4412731065d5",
                    "dweb:/ipfs/QmWaoacnzsucTvBME2o7YgZBZMhaHv7fkj83htHMVWJKWh"
                ],
                "license": "GPL-2.0-or-later"
            },
            "lib/v3-core/contracts/interfaces/callback/IUniswapV3SwapCallback.sol": {
                "keccak256": "0x3f485fb1a44e8fbeadefb5da07d66edab3cfe809f0ac4074b1e54e3eb3c4cf69",
                "urls": [
                    "bzz-raw://095ce0626b41318c772b3ebf19d548282607f6a8f3d6c41c13edfbd5370c8652",
                    "dweb:/ipfs/QmVDZfJJ89UUCE1hMyzqpkZAtQ8jUsBgZNE5AMRG7RzRFS"
                ],
                "license": "GPL-2.0-or-later"
            },
            "lib/v3-core/contracts/interfaces/pool/IUniswapV3PoolActions.sol": {
                "keccak256": "0x9453dd0e7442188667d01d9b65de3f1e14e9511ff3e303179a15f6fc267f7634",
                "urls": [
                    "bzz-raw://982f4328f956c3e60e67501e759eb292ac487f76460c774c50e9ae4fcc92aae5",
                    "dweb:/ipfs/QmRnzEDsaqtd9PJEVcgQi7p5aV5pMSvRUoGZJAdwFUJxgZ"
                ],
                "license": "GPL-2.0-or-later"
            },
            "lib/v3-core/contracts/interfaces/pool/IUniswapV3PoolDerivedState.sol": {
                "keccak256": "0xe603ac5b17ecdee73ba2b27efdf386c257a19c14206e87eee77e2017b742d9e5",
                "urls": [
                    "bzz-raw://8febc9bdb399a4d94bb89f5377732652e2400e4a8dee808201ade6848f9004e7",
                    "dweb:/ipfs/QmaKDqYYFU4d2W2iN77aDHptfbFmYZRrMYXHeGpJmM8C1c"
                ],
                "license": "GPL-2.0-or-later"
            },
            "lib/v3-core/contracts/interfaces/pool/IUniswapV3PoolEvents.sol": {
                "keccak256": "0x8071514d0fe5d17d6fbd31c191cdfb703031c24e0ece3621d88ab10e871375cd",
                "urls": [
                    "bzz-raw://d0b571930cc7488b1d546a7e9cea7c52d8b3c4e207da657ed0e0db7343b8cd03",
                    "dweb:/ipfs/QmaGK6vVwB95QSTR1XMYvrh7ivYAYZxi3fD7v6VMA4jZ39"
                ],
                "license": "GPL-2.0-or-later"
            },
            "lib/v3-core/contracts/interfaces/pool/IUniswapV3PoolImmutables.sol": {
                "keccak256": "0xf6e5d2cd1139c4c276bdbc8e1d2b256e456c866a91f1b868da265c6d2685c3f7",
                "urls": [
                    "bzz-raw://b99c8c9ae8e27ee6559e5866bea82cbc9ffc8247f8d15b7422a4deb287d4d047",
                    "dweb:/ipfs/QmfL8gaqt3ffAnm6nVj5ksuNpLygXuL3xq5VBqrkwC2JJ3"
                ],
                "license": "GPL-2.0-or-later"
            },
            "lib/v3-core/contracts/interfaces/pool/IUniswapV3PoolOwnerActions.sol": {
                "keccak256": "0x759b78a2918af9e99e246dc3af084f654e48ef32bb4e4cb8a966aa3dcaece235",
                "urls": [
                    "bzz-raw://64144fb96e1c7fdba87305acadb98a198d26a3d46c097cb3a666e567f6f29735",
                    "dweb:/ipfs/QmUnWVwN9FKB9uV5Pr8YfLpWZnYM2DENnRMaadZ492JS9u"
                ],
                "license": "GPL-2.0-or-later"
            },
            "lib/v3-core/contracts/interfaces/pool/IUniswapV3PoolState.sol": {
                "keccak256": "0x852dc1f5df7dcf7f11e7bb3eed79f0cea72ad4b25f6a9d2c35aafb48925fd49f",
                "urls": [
                    "bzz-raw://ed63907c38ff36b0e22bc9ffc53e791ea74f0d4f0e7c257fdfb5aaf8825b1f0f",
                    "dweb:/ipfs/QmSQrckghEjs6HVsA5GVgpNpZWvTXMY5eQLF7cN6deFeEg"
                ],
                "license": "GPL-2.0-or-later"
            },
            "lib/v3-core/contracts/libraries/BitMath.sol": {
                "keccak256": "0x82e425066110aac05ed8a9fc90f9ee85142b6f434769447e49d4438a8d9fcd82",
                "urls": [
                    "bzz-raw://77a97078bc992c18c59cb61e07fa4632c8a26b6babf00f3b16eabb5dcaa953b4",
                    "dweb:/ipfs/QmTj15ufLWk6AxedSVXBcLp5cYf2DCJAeDi94cVemCkm54"
                ],
                "license": "GPL-2.0-or-later"
            },
            "lib/v3-core/contracts/libraries/SafeCast.sol": {
                "keccak256": "0x4c12bf820c0b011f5490a209960ca34dd8af34660ef9e01de0438393d15e3fd8",
                "urls": [
                    "bzz-raw://fed11489e218e55d087d42b4f350a30e10cd2aedec8f432bd3cc712f648d5869",
                    "dweb:/ipfs/QmWfRnRxyXwHUDcTQPazxYYk5jxErGeQqdvnYtyg5nBPbU"
                ],
                "license": "GPL-2.0-or-later"
            },
            "lib/v3-core/contracts/libraries/TickBitmap.sol": {
                "keccak256": "0x2035bacd76333baa4ef2bbd6423561638e1b7e97cb19be5b4d61feeea3340364",
                "urls": [
                    "bzz-raw://55da2e8d44c094b9aa1a40577f9ff32605516ae45ad54e799ec9d570d007a206",
                    "dweb:/ipfs/QmakgjThKgfBTaj6Vvf54oKkxeHqgxKFmyiVbcjstsGDBF"
                ],
                "license": "BUSL-1.1"
            },
            "lib/v3-core/contracts/libraries/TickMath.sol": {
                "keccak256": "0x1f864a2bf61ba05f3173eaf2e3f94c5e1da4bec0554757527b6d1ef1fe439e4e",
                "urls": [
                    "bzz-raw://5139b586df546a9d1c46804ca400b1cb9ce87236eaf212ebd64edee6747a172a",
                    "dweb:/ipfs/QmVa2kcRw3VyuB6j1EVWXACKnkbQZgfXYXNi5voq3XkYG8"
                ],
                "license": "GPL-2.0-or-later"
            },
            "lib/v3-periphery/contracts/base/PeripheryImmutableState.sol": {
                "keccak256": "0xd43c2355a7d5659b1fa1fb322647f760722d73a6a5e62ede53d426f3b406b795",
                "urls": [
                    "bzz-raw://657920576878ca936157383782a97b74166c303a3932c0d72eac3a2d057c3a96",
                    "dweb:/ipfs/Qma71Ska1ZbPBnYpeE5S2EAeEtwGfHEMHo3SnDwY1fVmm5"
                ],
                "license": "GPL-2.0-or-later"
            },
            "lib/v3-periphery/contracts/interfaces/IPeripheryImmutableState.sol": {
                "keccak256": "0x7affcfeb5127c0925a71d6a65345e117c33537523aeca7bc98085ead8452519d",
                "urls": [
                    "bzz-raw://e16b291294210e71cb0f20cd0afe62ae2dc6878d627f5ccc19c4dc9cd80aec3f",
                    "dweb:/ipfs/QmQGitSyBr26nour81BZmpmDMyJpvZRqHQZvnCD1Acb127"
                ],
                "license": "GPL-2.0-or-later"
            },
            "lib/v3-periphery/contracts/interfaces/IQuoterV2.sol": {
                "keccak256": "0x7e931f0cd34811851031c4f1318f59b4a4b427a2d2e2968b8e5ed87a9f7f89d6",
                "urls": [
                    "bzz-raw://63a8d7dcdd081004356b39e1b8e19ee56b02b3abd3e4165781bde1a100a35bed",
                    "dweb:/ipfs/QmdfpYkMxoaeEd646aSioLZcPodnCnpZy9Ny4j98uAba2J"
                ],
                "license": "GPL-2.0-or-later"
            },
            "lib/v3-periphery/contracts/lens/QuoterV2.sol": {
                "keccak256": "0x4498d65850fa2954aabf326bc61fdd5801b25e6f1af4766d77b8610105a9d621",
                "urls": [
                    "bzz-raw://6642216c5a36919ef38eb6e7457a48ac7bb1b5caee87276f14608bc2f602edf0",
                    "dweb:/ipfs/QmSPLBzwzSgcv2sY4g9yRYKTdjnjSqrZy6MfS7yu7mVbo8"
                ],
                "license": "GPL-2.0-or-later"
            },
            "lib/v3-periphery/contracts/libraries/BytesLib.sol": {
                "keccak256": "0x68629e5b1a30b6490c6ae721c28117f6f963745462b007da0769758eb67f10d4",
                "urls": [
                    "bzz-raw://370e31ceab1a7504f98dec122f65d9b8c6fc6420fd8cdd171b3dd57c4d5d21fc",
                    "dweb:/ipfs/QmcquKATbnopgs92RdM5bKewt7GdCpgGhVY4hxmv1KjnnH"
                ],
                "license": "GPL-2.0-or-later"
            },
            "lib/v3-periphery/contracts/libraries/CallbackValidation.sol": {
                "keccak256": "0x490c80ca7f4a0ee0514041ddec0867e8a52b24febf1670991797af8fed9f3eec",
                "urls": [
                    "bzz-raw://f775ba8ad52041a351fbd7000801266d5a10be2f1a53d13c6c9862b2baa935bd",
                    "dweb:/ipfs/Qmcaxyr6VutZeaymeBNVcZrBVAHhyJ11sjhWpgj2GX6D5K"
                ],
                "license": "GPL-2.0-or-later"
            },
            "lib/v3-periphery/contracts/libraries/Path.sol": {
                "keccak256": "0xb22c562b5175d50dbcc2224325666090d985f052abdcfe275c8dfc884e34de61",
                "urls": [
                    "bzz-raw://27aeff27314476ab3c77313ae1f0c5b2442b86315f5ce741cb2150a87c3cbad3",
                    "dweb:/ipfs/QmQNno2g1CJvjnH6ych4LuHr1UZDEZPACgYG4XvivxGrqV"
                ],
                "license": "GPL-2.0-or-later"
            },
            "lib/v3-periphery/contracts/libraries/PoolAddress.sol": {
                "keccak256": "0x5edd84eb8ba7c12fd8cb6cffe52e1e9f3f6464514ee5f539c2283826209035a2",
                "urls": [
                    "bzz-raw://f375d0e6d5ea3674e1aa6f112b021e9a86721a6a2f3cb22d673378b30cf0e840",
                    "dweb:/ipfs/QmWJir2qnJyp963mU6U3jEEx9i3H3V5BgKawAfSnG1pC8w"
                ],
                "license": "GPL-2.0-or-later"
            },
            "lib/v3-periphery/contracts/libraries/PoolTicksCounter.sol": {
                "keccak256": "0x45df43e95351dc152cecc0c4aaa9303f322434cd4c3981464879f55b75462220",
                "urls": [
                    "bzz-raw://855519ed3cd5f22b4b05f7f715414828bdca8d7e25ea71b4cde47a9694a8d754",
                    "dweb:/ipfs/QmWpngV7EQkBSMi1JYwpLWBZLGfMTESCRypnmmhPqwksRA"
                ],
                "license": "GPL-2.0-or-later"
            }
        },
        "version": 1
    },
    "id": 15
}